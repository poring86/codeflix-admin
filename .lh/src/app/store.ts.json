{
    "sourceFile": "src/app/store.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 40,
            "patches": [
                {
                    "date": 1698929912273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698929921932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n import counterReducer from '../features/counter/counterSlice';\n import categorySlice from '../features/categories/categorySlice';\n+import { apiSlice } from '../features/api/apiSlice';\n \n export const store = configureStore({\n   reducer: {\n     counter: counterReducer,\n"
                },
                {
                    "date": 1698931340791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,15 @@\n import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n import counterReducer from '../features/counter/counterSlice';\n-import categorySlice from '../features/categories/categorySlice';\n+import categorySlice, { categoriesApiSlice } from '../features/categories/categorySlice';\n import { apiSlice } from '../features/api/apiSlice';\n \n export const store = configureStore({\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n-    [apiSlice.reducerPath]: apiSlice.reducer\n+    [apiSlice.reducerPath]: apiSlice.reducer,\n+    [categoriesApiSlice.reducerPath]: apiSlice.reducer\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1698935660529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,4 +19,6 @@\n   RootState,\n   unknown,\n   Action<string>\n >;\n+\n+export const { useGetCategoriesQuery } = categoriesApiSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1698962481623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,4 @@\n   unknown,\n   Action<string>\n >;\n \n-export const { useGetCategoriesQuery } = categoriesApiSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1698963217439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n     [apiSlice.reducerPath]: apiSlice.reducer,\n-    [categoriesApiSlice.reducerPath]: apiSlice.reducer\n+    [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699029513527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n import counterReducer from '../features/counter/counterSlice';\n-import categorySlice, { categoriesApiSlice } from '../features/categories/categorySlice';\n+import { categoriesApiSlice } from '../features/categories/categorySlice';\n import { apiSlice } from '../features/api/apiSlice';\n \n export const store = configureStore({\n   reducer: {\n"
                },
                {
                    "date": 1699029532692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n import counterReducer from '../features/counter/counterSlice';\n-import { categoriesApiSlice } from '../features/categories/categorySlice';\n+import categorySlice, { categoriesApiSlice } from '../features/categories/categorySlice';\n import { apiSlice } from '../features/api/apiSlice';\n \n export const store = configureStore({\n   reducer: {\n"
                },
                {
                    "date": 1699033571097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n     [apiSlice.reducerPath]: apiSlice.reducer,\n-    [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n+    [categoriesApiSlice.reducerPath]: categoriesApiSlice.reducer,\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699033636646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n     [apiSlice.reducerPath]: apiSlice.reducer,\n-    [categoriesApiSlice.reducerPath]: categoriesApiSlice.reducer,\n+    [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699033670515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export const store = configureStore({\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n-    [apiSlice.reducerPath]: apiSlice.reducer,\n+    // [apiSlice.reducerPath]: apiSlice.reducer,\n     [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n \n"
                },
                {
                    "date": 1699038349011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n export const store = configureStore({\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n-    // [apiSlice.reducerPath]: apiSlice.reducer,\n-    [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n+    [apiSlice.reducerPath]: apiSlice.reducer,\n+    // [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699038375953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export const store = configureStore({\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n-    [apiSlice.reducerPath]: apiSlice.reducer,\n+    // [apiSlice.reducerPath]: apiSlice.reducer,\n     // [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n \n"
                },
                {
                    "date": 1699039060960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n import { apiSlice } from '../features/api/apiSlice';\n \n export const store = configureStore({\n   reducer: {\n-    counter: counterReducer,\n-    categories: categorySlice,\n+    // counter: counterReducer,\n+    // categories: categorySlice,\n     // [apiSlice.reducerPath]: apiSlice.reducer,\n     // [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n"
                },
                {
                    "date": 1699039083139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n import { apiSlice } from '../features/api/apiSlice';\n \n export const store = configureStore({\n   reducer: {\n-    // counter: counterReducer,\n-    // categories: categorySlice,\n+    counter: counterReducer,\n+    categories: categorySlice,\n     // [apiSlice.reducerPath]: apiSlice.reducer,\n     // [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n"
                },
                {
                    "date": 1699039123024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n export const store = configureStore({\n   reducer: {\n     counter: counterReducer,\n     categories: categorySlice,\n-    // [apiSlice.reducerPath]: apiSlice.reducer,\n-    // [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n+    [apiSlice.reducerPath]: apiSlice.reducer,\n+    [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699039900700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n     counter: counterReducer,\n     categories: categorySlice,\n     [apiSlice.reducerPath]: apiSlice.reducer,\n     [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n+    middleware: (getDefaultMiddleware) =>\n+      getDefaultMiddleware().concat(apiSlice.middleware),\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699039910001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,9 @@\n     counter: counterReducer,\n     categories: categorySlice,\n     [apiSlice.reducerPath]: apiSlice.reducer,\n     [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n-    middleware: (getDefaultMiddleware) =>\n-      getDefaultMiddleware().concat(apiSlice.middleware),\n+\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699039934268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,10 @@\n     counter: counterReducer,\n     categories: categorySlice,\n     [apiSlice.reducerPath]: apiSlice.reducer,\n     [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n-\n+    middleware: (getDefaultMiddleware) =>\n+      getDefaultMiddleware().concat(apiSlice.middleware),\n   },\n });\n \n export type AppDispatch = typeof store.dispatch;\n"
                },
                {
                    "date": 1699039947047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,12 @@\n     counter: counterReducer,\n     categories: categorySlice,\n     [apiSlice.reducerPath]: apiSlice.reducer,\n     [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n-    middleware: (getDefaultMiddleware) =>\n-      getDefaultMiddleware().concat(apiSlice.middleware),\n+\n   },\n+  middleware: (getDefaultMiddleware) =>\n+    getDefaultMiddleware().concat(apiSlice.middleware),\n });\n \n export type AppDispatch = typeof store.dispatch;\n export type RootState = ReturnType<typeof store.getState>;\n"
                },
                {
                    "date": 1699656739177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,19 @@\n-import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n+import { configureStore, ThunkAction, Action, combineReducers } from '@reduxjs/toolkit';\n import counterReducer from '../features/counter/counterSlice';\n import categorySlice, { categoriesApiSlice } from '../features/categories/categorySlice';\n import { apiSlice } from '../features/api/apiSlice';\n+import { castMembersApiSlice } from '../features/castMembers/castMembersSlice';\n \n+const rootReducer = combineReducers({\n+  categories: categorySlice,\n+  [apiSlice.reducerPath]: apiSlice.reducer,\n+  [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n+  [castMembersApiSlice.reducerPath]: apiSlice.reducer,\n+})\n+\n export const store = configureStore({\n-  reducer: {\n-    counter: counterReducer,\n-    categories: categorySlice,\n-    [apiSlice.reducerPath]: apiSlice.reducer,\n-    [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n-\n-  },\n+  reducer: rootReducer,\n   middleware: (getDefaultMiddleware) =>\n     getDefaultMiddleware().concat(apiSlice.middleware),\n });\n \n"
                },
                {
                    "date": 1699656751462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import { configureStore, ThunkAction, Action, combineReducers } from '@reduxjs/toolkit';\n-import counterReducer from '../features/counter/counterSlice';\n import categorySlice, { categoriesApiSlice } from '../features/categories/categorySlice';\n import { apiSlice } from '../features/api/apiSlice';\n import { castMembersApiSlice } from '../features/castMembers/castMembersSlice';\n \n"
                },
                {
                    "date": 1699656919365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { configureStore, ThunkAction, Action, combineReducers } from '@reduxjs/toolkit';\n+import { configureStore, ThunkAction, Action, combineReducers, PreloadedState } from '@reduxjs/toolkit';\n import categorySlice, { categoriesApiSlice } from '../features/categories/categorySlice';\n import { apiSlice } from '../features/api/apiSlice';\n import { castMembersApiSlice } from '../features/castMembers/castMembersSlice';\n \n@@ -9,8 +9,12 @@\n   [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   [castMembersApiSlice.reducerPath]: apiSlice.reducer,\n })\n \n+export const setupStore = (preloadedState?: PreloadedState<RootState>) => {\n+  return coreConfigureStore()\n+}\n+\n export const store = configureStore({\n   reducer: rootReducer,\n   middleware: (getDefaultMiddleware) =>\n     getDefaultMiddleware().concat(apiSlice.middleware),\n"
                },
                {
                    "date": 1699656969804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,13 @@\n   [castMembersApiSlice.reducerPath]: apiSlice.reducer,\n })\n \n export const setupStore = (preloadedState?: PreloadedState<RootState>) => {\n-  return coreConfigureStore()\n+  return coreConfigureStore({\n+    reducer: rootReducer,\n+    middleware: (getDefaultMiddleware) =>\n+      getDefaultMiddleware().concat(apiSlice.middleware),\n+  })\n }\n \n export const store = configureStore({\n   reducer: rootReducer,\n"
                },
                {
                    "date": 1699656995301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,11 @@\n   [castMembersApiSlice.reducerPath]: apiSlice.reducer,\n })\n \n export const setupStore = (preloadedState?: PreloadedState<RootState>) => {\n-  return coreConfigureStore({\n+  return configureStore({\n     reducer: rootReducer,\n+    preloadedState,\n     middleware: (getDefaultMiddleware) =>\n       getDefaultMiddleware().concat(apiSlice.middleware),\n   })\n }\n"
                },
                {
                    "date": 1699657014817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,8 @@\n       getDefaultMiddleware().concat(apiSlice.middleware),\n   })\n }\n \n-export const store = configureStore({\n-  reducer: rootReducer,\n-  middleware: (getDefaultMiddleware) =>\n-    getDefaultMiddleware().concat(apiSlice.middleware),\n-});\n-\n export type AppDispatch = typeof store.dispatch;\n export type RootState = ReturnType<typeof store.getState>;\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n"
                },
                {
                    "date": 1699657104738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,15 @@\n       getDefaultMiddleware().concat(apiSlice.middleware),\n   })\n }\n \n+export const store = configureStore({\n+  reducer: rootReducer,\n+  middleware: (getDefaultMiddleware) =>\n+    getDefaultMiddleware().concat(apiSlice.middleware),\n+});\n+\n+export type AppStore = ReturnType<typeof setupStore>\n export type AppDispatch = typeof store.dispatch;\n export type RootState = ReturnType<typeof store.getState>;\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n"
                },
                {
                    "date": 1699657126602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     getDefaultMiddleware().concat(apiSlice.middleware),\n });\n \n export type AppStore = ReturnType<typeof setupStore>\n-export type AppDispatch = typeof store.dispatch;\n+export type AppDispatch = AppStore[\"dispatch\"]\n export type RootState = ReturnType<typeof store.getState>;\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n   RootState,\n"
                },
                {
                    "date": 1699657448946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n });\n \n export type AppStore = ReturnType<typeof setupStore>\n export type AppDispatch = AppStore[\"dispatch\"]\n-export type RootState = ReturnType<typeof store.getState>;\n+export type RootState = ReturnType<typeof rootReducer>;\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n   RootState,\n   unknown,\n"
                },
                {
                    "date": 1699658072944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,8 @@\n       getDefaultMiddleware().concat(apiSlice.middleware),\n   })\n }\n \n-export const store = configureStore({\n-  reducer: rootReducer,\n-  middleware: (getDefaultMiddleware) =>\n-    getDefaultMiddleware().concat(apiSlice.middleware),\n-});\n-\n export type AppStore = ReturnType<typeof setupStore>\n export type AppDispatch = AppStore[\"dispatch\"]\n export type RootState = ReturnType<typeof rootReducer>;\n export type AppThunk<ReturnType = void> = ThunkAction<\n"
                },
                {
                    "date": 1699741570769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,16 @@\n-import { configureStore, ThunkAction, Action, combineReducers, PreloadedState } from '@reduxjs/toolkit';\n-import categorySlice, { categoriesApiSlice } from '../features/categories/categorySlice';\n-import { apiSlice } from '../features/api/apiSlice';\n-import { castMembersApiSlice } from '../features/castMembers/castMembersSlice';\n+import {\n+  configureStore,\n+  ThunkAction,\n+  Action,\n+  combineReducers,\n+  PreloadedState,\n+} from '@reduxjs/toolkit'\n+import { apiSlice } from '../features/api/apiSlice'\n+import { castMembersApiSlice } from '../features/cast/castMembersSlice'\n+import { categoriesApiSlice } from '../features/categories/categorySlice'\n \n const rootReducer = combineReducers({\n-  categories: categorySlice,\n   [apiSlice.reducerPath]: apiSlice.reducer,\n   [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   [castMembersApiSlice.reducerPath]: apiSlice.reducer,\n })\n@@ -19,13 +24,12 @@\n   })\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n-export type AppDispatch = AppStore[\"dispatch\"]\n-export type RootState = ReturnType<typeof rootReducer>;\n+export type AppDispatch = AppStore['dispatch']\n+export type RootState = ReturnType<typeof rootReducer>\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n   RootState,\n   unknown,\n   Action<string>\n->;\n-\n+>\n"
                },
                {
                    "date": 1699747361562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,11 @@\n   combineReducers,\n   PreloadedState,\n } from '@reduxjs/toolkit'\n import { apiSlice } from '../features/api/apiSlice'\n-import { castMembersApiSlice } from '../features/cast/castMembersSlice'\n+\n import { categoriesApiSlice } from '../features/categories/categorySlice'\n+import { castMembersApiSlice } from '../features/castMembers/castMembersSlice'\n \n const rootReducer = combineReducers({\n   [apiSlice.reducerPath]: apiSlice.reducer,\n   [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n"
                },
                {
                    "date": 1701520713025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,13 +8,18 @@\n import { apiSlice } from '../features/api/apiSlice'\n \n import { categoriesApiSlice } from '../features/categories/categorySlice'\n import { castMembersApiSlice } from '../features/castMembers/castMembersSlice'\n+import { genreSlice } from '../features/genre/genreSlice'\n+import { videosSlice } from '../features/videos/videosSlice'\n \n const rootReducer = combineReducers({\n   [apiSlice.reducerPath]: apiSlice.reducer,\n   [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   [castMembersApiSlice.reducerPath]: apiSlice.reducer,\n+  [videosSlice.reducerPath]: apiSlice.reducer,\n+  [genreSlice.reducerPath]: apiSlice.reducer,\n+  uploadSlice: uploadReducer,\n })\n \n export const setupStore = (preloadedState?: PreloadedState<RootState>) => {\n   return configureStore({\n@@ -26,9 +31,9 @@\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n export type AppDispatch = AppStore['dispatch']\n-export type RootState = ReturnType<typeof rootReducer>\n+export type RootState = ReturnType<typeof rootReducer>;\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n   RootState,\n   unknown,\n"
                },
                {
                    "date": 1701520762087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,16 +10,17 @@\n import { categoriesApiSlice } from '../features/categories/categorySlice'\n import { castMembersApiSlice } from '../features/castMembers/castMembersSlice'\n import { genreSlice } from '../features/genre/genreSlice'\n import { videosSlice } from '../features/videos/videosSlice'\n+import { uploadsReducer } from '../features/uploads/uploadSlice'\n \n const rootReducer = combineReducers({\n   [apiSlice.reducerPath]: apiSlice.reducer,\n   [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n   [castMembersApiSlice.reducerPath]: apiSlice.reducer,\n   [videosSlice.reducerPath]: apiSlice.reducer,\n   [genreSlice.reducerPath]: apiSlice.reducer,\n-  uploadSlice: uploadReducer,\n+  uploadSlice: uploadsReducer,\n })\n \n export const setupStore = (preloadedState?: PreloadedState<RootState>) => {\n   return configureStore({\n@@ -31,9 +32,9 @@\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n export type AppDispatch = AppStore['dispatch']\n-export type RootState = ReturnType<typeof rootReducer>;\n+export type RootState = ReturnType<typeof rootReducer>; \\\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n   RootState,\n   unknown,\n"
                },
                {
                    "date": 1701521481953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n export type AppDispatch = AppStore['dispatch']\n-export type RootState = ReturnType<typeof rootReducer>; \\\n+export type RootState = ReturnType<typeof rootReducer>\n export type AppThunk<ReturnType = void> = ThunkAction<\n   ReturnType,\n   RootState,\n   unknown,\n"
                },
                {
                    "date": 1701542231348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   return configureStore({\n     reducer: rootReducer,\n     preloadedState,\n     middleware: (getDefaultMiddleware) =>\n-      getDefaultMiddleware().concat(apiSlice.middleware),\n+      getDefaultMiddleware({ serializableCheck: false }).concat(apiSlice.middleware),\n   })\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n"
                },
                {
                    "date": 1701565335530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   return configureStore({\n     reducer: rootReducer,\n     preloadedState,\n     middleware: (getDefaultMiddleware) =>\n-      getDefaultMiddleware({ serializableCheck: false }).concat(apiSlice.middleware),\n+      getDefaultMiddleware({ serializableCheck: false }).concat(apiSlice.middleware).prepend(uploadQueue.middleware)\n   })\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n"
                },
                {
                    "date": 1701565345501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   return configureStore({\n     reducer: rootReducer,\n     preloadedState,\n     middleware: (getDefaultMiddleware) =>\n-      getDefaultMiddleware({ serializableCheck: false }).concat(apiSlice.middleware).prepend(uploadQueue.middleware)\n+      getDefaultMiddleware({ serializableCheck: false }).concat(apiSlice.middleware)\n   })\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n"
                },
                {
                    "date": 1701565365189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   return configureStore({\n     reducer: rootReducer,\n     preloadedState,\n     middleware: (getDefaultMiddleware) =>\n-      getDefaultMiddleware({ serializableCheck: false }).concat(apiSlice.middleware)\n+      getDefaultMiddleware({ serializableCheck: false }).prepend(uploadQueue.middleware).concat(apiSlice.middleware)\n   })\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n"
                },
                {
                    "date": 1701565371989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,11 @@\n   return configureStore({\n     reducer: rootReducer,\n     preloadedState,\n     middleware: (getDefaultMiddleware) =>\n-      getDefaultMiddleware({ serializableCheck: false }).prepend(uploadQueue.middleware).concat(apiSlice.middleware)\n+      getDefaultMiddleware({ serializableCheck: false })\n+        .prepend(uploadQueue.middleware)\n+        .concat(apiSlice.middleware)\n   })\n }\n \n export type AppStore = ReturnType<typeof setupStore>\n"
                },
                {
                    "date": 1701608722380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { castMembersApiSlice } from '../features/castMembers/castMembersSlice'\n import { genreSlice } from '../features/genre/genreSlice'\n import { videosSlice } from '../features/videos/videosSlice'\n import { uploadsReducer } from '../features/uploads/uploadSlice'\n+import { uploadQueue } from '../middleware/uploadQueue'\n \n const rootReducer = combineReducers({\n   [apiSlice.reducerPath]: apiSlice.reducer,\n   [categoriesApiSlice.reducerPath]: apiSlice.reducer,\n"
                }
            ],
            "date": 1698929912273,
            "name": "Commit-0",
            "content": "import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport categorySlice from '../features/categories/categorySlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    categories: categorySlice,\n    [apiSlice.reducerPath]: apiSlice.reducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"
        }
    ]
}