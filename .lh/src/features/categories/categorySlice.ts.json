{
    "sourceFile": "src/features/categories/categorySlice.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 91,
            "patches": [
                {
                    "date": 1695861518172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695861552551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,7 +3,7 @@\n   name: \"Olive\",\n   description: \"Earum quo at dolor tempore nisi.\",\n   is_active: true,\n   delete_at: null,\n-  created_at: \"2020-06-06T11:00:00.000Z\",\n-  updated_at: \"2020-06-06T11:00:00.000Z\",\n+  created_at: \"2020-06-06T11:00:00+0000\",\n+  updated_at: \"2020-06-06T11:00:00+0000\",\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695862100057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,16 @@\n const category = {\n-  id: \"199183e2-5d97-11ee-8c99-0242ac120002\",\n+  id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n   name: \"Olive\",\n   description: \"Earum quo at dolor tempore nisi.\",\n   is_active: true,\n   delete_at: null,\n   created_at: \"2020-06-06T11:00:00+0000\",\n   updated_at: \"2020-06-06T11:00:00+0000\",\n\\ No newline at end of file\n-}\n+}\n+\n+const categories = [\n+  category,\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Banana\" },\n+]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695862332223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,14 @@\n+interface Category {\n+  id: string,\n+  name: string,\n+  description: string,\n+  is_active: boolean,\n+  delete_at: string | null,\n+  created_at: string,\n+  updated_at: string,\n+}\n+\n const category = {\n   id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n   name: \"Olive\",\n   description: \"Earum quo at dolor tempore nisi.\",\n"
                },
                {
                    "date": 1695866213855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import { createSlice } from \"@reduxjs/toolkit\"\n+\n interface Category {\n   id: string,\n   name: string,\n   description: string,\n@@ -22,5 +24,16 @@\n   category,\n   { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n   { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n   { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Banana\" },\n-]\n\\ No newline at end of file\n+]\n+\n+export const initialState = {\n+  categories: [categories]\n+}\n+\n+const categoriesSlice = createSlice({\n+  name: \"categories\",\n+  initialState,\n+  reducers: {}\n+\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695866237365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,6 +34,7 @@\n const categoriesSlice = createSlice({\n   name: \"categories\",\n   initialState,\n   reducers: {}\n+})\n \n\\ No newline at end of file\n-})\n+export categoriesSlice.reducer\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695866244380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,5 +36,5 @@\n   initialState,\n   reducers: {}\n })\n \n-export categoriesSlice.reducer\n\\ No newline at end of file\n+export default categoriesSlice.reducer\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696032497784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { createSlice } from \"@reduxjs/toolkit\"\n+import { RootState } from \"../../app/store\"\n \n interface Category {\n   id: string,\n   name: string,\n@@ -26,15 +27,19 @@\n   { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n   { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Banana\" },\n ]\n \n-export const initialState = {\n-  categories: [categories]\n-}\n+export const initialState = [\n+  ...categories\n+]\n \n const categoriesSlice = createSlice({\n   name: \"categories\",\n   initialState,\n   reducers: {}\n })\n \n+export const selectCategories = (state: RootState) => state.categories\n+\n+export const selectCategoryById = (state: RootState, id: string) => state.categories.find((category) => category.id === id)\n+\n export default categoriesSlice.reducer\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696033449432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n   initialState,\n   reducers: {}\n })\n \n+// Selectors\n export const selectCategories = (state: RootState) => state.categories\n \n export const selectCategoryById = (state: RootState, id: string) => state.categories.find((category) => category.id === id)\n \n"
                },
                {
                    "date": 1696033805104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,7 +40,19 @@\n \n // Selectors\n export const selectCategories = (state: RootState) => state.categories\n \n-export const selectCategoryById = (state: RootState, id: string) => state.categories.find((category) => category.id === id)\n+export const selectCategoryById = (state: RootState, id: string) => {\n+  const category = state.categories.find((category) => category.id === id)\n \n+  return category || {\n+    id: \"\",\n+    name: \"\",\n+    description: \"\",\n+    is_active: false,\n+    deleted_at: null,\n+    created_at: \"\",\n+    updated_at: \"\",\n+  }\n+}\n+\n export default categoriesSlice.reducer\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696033821152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,16 +43,16 @@\n \n export const selectCategoryById = (state: RootState, id: string) => {\n   const category = state.categories.find((category) => category.id === id)\n \n-  return category || {\n+  return (category || {\n     id: \"\",\n     name: \"\",\n     description: \"\",\n     is_active: false,\n     deleted_at: null,\n     created_at: \"\",\n     updated_at: \"\",\n-  }\n+  })\n }\n \n export default categoriesSlice.reducer\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696039145486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \n export const selectCategoryById = (state: RootState, id: string) => {\n   const category = state.categories.find((category) => category.id === id)\n \n-  return (category || {\n+  return (category ?? {\n     id: \"\",\n     name: \"\",\n     description: \"\",\n     is_active: false,\n"
                },
                {
                    "date": 1696039168792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,10 @@\n \n export const selectCategoryById = (state: RootState, id: string) => {\n   const category = state.categories.find((category) => category.id === id)\n \n+  console.log('category 2', category)\n+\n   return (category ?? {\n     id: \"\",\n     name: \"\",\n     description: \"\",\n"
                },
                {
                    "date": 1696039180059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \n export const selectCategoryById = (state: RootState, id: string) => {\n   const category = state.categories.find((category) => category.id === id)\n \n-  console.log('category 2', category)\n+  console.log('category 2', id)\n \n   return (category ?? {\n     id: \"\",\n     name: \"\",\n"
                },
                {
                    "date": 1696079200337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { createSlice } from \"@reduxjs/toolkit\"\n import { RootState } from \"../../app/store\"\n \n-interface Category {\n+export interface Category {\n   id: string,\n   name: string,\n   description: string,\n   is_active: boolean,\n"
                },
                {
                    "date": 1696093894843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   id: string,\n   name: string,\n   description: string,\n   is_active: boolean,\n-  delete_at: string | null,\n+  deleted_at: string | null,\n   created_at: string,\n   updated_at: string,\n }\n \n"
                },
                {
                    "date": 1696093900860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n   name: \"Olive\",\n   description: \"Earum quo at dolor tempore nisi.\",\n   is_active: true,\n-  delete_at: null,\n+  deleted_at: null,\n   created_at: \"2020-06-06T11:00:00+0000\",\n   updated_at: \"2020-06-06T11:00:00+0000\",\n }\n \n"
                },
                {
                    "date": 1696115106642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,13 @@\n \n const categoriesSlice = createSlice({\n   name: \"categories\",\n   initialState,\n-  reducers: {}\n+  reducers: {\n+    updateCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n+    }\n+  }\n })\n \n // Selectors\n export const selectCategories = (state: RootState) => state.categories\n"
                },
                {
                    "date": 1696115183834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,10 @@\n   initialState,\n   reducers: {\n     updateCategory(state, action) {\n       const index = state.findIndex((category) => category.id === action.payload.id)\n+\n+      state[index] = action.payload\n     }\n   }\n })\n \n"
                },
                {
                    "date": 1696116365925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,5 +62,7 @@\n     updated_at: \"\",\n   })\n }\n \n-export default categoriesSlice.reducer\n\\ No newline at end of file\n+export default categoriesSlice.reducer\n+\n+export default categoriesSlice.actions\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696161565996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,5 +64,5 @@\n }\n \n export default categoriesSlice.reducer\n \n-export default categoriesSlice.actions\n\\ No newline at end of file\n+export const { updateCategory } = categorySlice.actions\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696181899197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,13 @@\n     updateCategory(state, action) {\n       const index = state.findIndex((category) => category.id === action.payload.id)\n \n       state[index] = action.payload\n+    },\n+    createCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n+\n+      state[index] = action.payload\n     }\n   }\n })\n \n@@ -64,5 +69,5 @@\n }\n \n export default categoriesSlice.reducer\n \n-export const { updateCategory } = categorySlice.actions\n\\ No newline at end of file\n+export const { updateCategory, createCategory } = categoriesSlice.actions\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696182018996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,9 @@\n \n       state[index] = action.payload\n     },\n     createCategory(state, action) {\n-      const index = state.findIndex((category) => category.id === action.payload.id)\n-\n-      state[index] = action.payload\n+      state.push(action.payload)\n     }\n   }\n })\n \n"
                },
                {
                    "date": 1696183007961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,13 @@\n       state[index] = action.payload\n     },\n     createCategory(state, action) {\n       state.push(action.payload)\n+    },\n+    deleteCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n+\n+      state[index] = action.payload\n     }\n   }\n })\n \n@@ -67,5 +72,5 @@\n }\n \n export default categoriesSlice.reducer\n \n-export const { updateCategory, createCategory } = categoriesSlice.actions\n\\ No newline at end of file\n+export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n\\ No newline at end of file\n"
                },
                {
                    "date": 1696183702814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     },\n     deleteCategory(state, action) {\n       const index = state.findIndex((category) => category.id === action.payload.id)\n \n-      state[index] = action.payload\n+      state.splice(index, 1)\n     }\n   }\n })\n \n"
                },
                {
                    "date": 1696184423284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n \n       state[index] = action.payload\n     },\n     createCategory(state, action) {\n+      console.log(action.payload)\n       state.push(action.payload)\n     },\n     deleteCategory(state, action) {\n       const index = state.findIndex((category) => category.id === action.payload.id)\n"
                },
                {
                    "date": 1696184438703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \n       state[index] = action.payload\n     },\n     createCategory(state, action) {\n-      console.log(action.payload)\n+      console.log('action.payload', action.payload)\n       state.push(action.payload)\n     },\n     deleteCategory(state, action) {\n       const index = state.findIndex((category) => category.id === action.payload.id)\n"
                },
                {
                    "date": 1696184519826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n const categories = [\n   category,\n   { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n   { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Banana\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120004\", name: \"Banana\" },\n ]\n \n export const initialState = [\n   ...categories\n"
                },
                {
                    "date": 1698930189767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,10 @@\n   created_at: string,\n   updated_at: string,\n }\n \n+const endpoint: string = \"categories\"\n+\n const category = {\n   id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n   name: \"Olive\",\n   description: \"Earum quo at dolor tempore nisi.\",\n"
                },
                {
                    "date": 1698930200517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   created_at: string,\n   updated_at: string,\n }\n \n-const endpoint: string = \"categories\"\n+const endpoint: string = \"/categories\"\n \n const category = {\n   id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n   name: \"Olive\",\n"
                },
                {
                    "date": 1698930265938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,10 @@\n }\n \n const endpoint: string = \"/categories\"\n \n+const categoriesApiSlice = apiSlice.injectEndpoints()\n+\n const category = {\n   id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n   name: \"Olive\",\n   description: \"Earum quo at dolor tempore nisi.\",\n"
                },
                {
                    "date": 1698930274115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { createSlice } from \"@reduxjs/toolkit\"\n import { RootState } from \"../../app/store\"\n+import { apiSlice } from \"../api/apiSlice\"\n \n export interface Category {\n   id: string,\n   name: string,\n"
                },
                {
                    "date": 1698930708784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { createSlice } from \"@reduxjs/toolkit\"\n import { RootState } from \"../../app/store\"\n import { apiSlice } from \"../api/apiSlice\"\n+import { Results } from \"../../types/Category\"\n \n export interface Category {\n   id: string,\n   name: string,\n@@ -11,11 +12,18 @@\n   created_at: string,\n   updated_at: string,\n }\n \n-const endpoint: string = \"/categories\"\n+const endpointUrl: string = \"/categories\"\n \n-const categoriesApiSlice = apiSlice.injectEndpoints()\n+const categoriesApiSlice = apiSlice.injectEndpoints({\n+  endpoints: ({ query }) => ({\n+    getCategories: query<Results, void>({\n+      query: endpointUrl,\n+      providesTags: [\"Categories\"],\n+    })\n+  })\n+})\n \n const category = {\n   id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n   name: \"Olive\",\n"
                },
                {
                    "date": 1698930736547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n     getCategories: query<Results, void>({\n-      query: endpointUrl,\n+      query: '${endpointsUrl}',\n       providesTags: [\"Categories\"],\n     })\n   })\n })\n"
                },
                {
                    "date": 1698930819279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n     getCategories: query<Results, void>({\n-      query: '${endpointsUrl}',\n+      query: `${endpointsUrl}`,\n       providesTags: [\"Categories\"],\n     })\n   })\n })\n"
                },
                {
                    "date": 1698930971322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n const endpointUrl: string = \"/categories\"\n \n const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n-    getCategories: query<Results, void>({\n+    getCategories: query<Results, string>({\n       query: `${endpointsUrl}`,\n       providesTags: [\"Categories\"],\n     })\n   })\n"
                },
                {
                    "date": 1698930990015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \n const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n     getCategories: query<Results, string>({\n-      query: `${endpointsUrl}`,\n+      query: `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n     })\n   })\n })\n"
                },
                {
                    "date": 1698931026903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n const endpointUrl: string = \"/categories\"\n \n const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n-    getCategories: query<Results, string>({\n-      query: `${endpointUrl}`,\n+    getCategories: query<Results, void>({\n+      query: () => `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n     })\n   })\n })\n"
                },
                {
                    "date": 1698931040096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n }\n \n const endpointUrl: string = \"/categories\"\n \n-const categoriesApiSlice = apiSlice.injectEndpoints({\n+export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n     getCategories: query<Results, void>({\n       query: () => `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n"
                },
                {
                    "date": 1698935688014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,5 +86,7 @@\n }\n \n export default categoriesSlice.reducer\n \n-export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n\\ No newline at end of file\n+export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n+\n+export const { useGetCategoriesQuery } = categoriesApiSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699029110862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +1,97 @@\n-import { createSlice } from \"@reduxjs/toolkit\"\n-import { RootState } from \"../../app/store\"\n-import { apiSlice } from \"../api/apiSlice\"\n-import { Results } from \"../../types/Category\"\n+import { Result, Results, CategoryParams } from \"../../types/Category\";\n+import { apiSlice } from \"../api/apiSlice\";\n \n export interface Category {\n-  id: string,\n-  name: string,\n-  description: string,\n-  is_active: boolean,\n-  deleted_at: string | null,\n-  created_at: string,\n-  updated_at: string,\n+  id: string;\n+  name: string;\n+  is_active: boolean;\n+  created_at: string;\n+  updated_at: string;\n+  deleted_at: null | string;\n+  description: null | string;\n }\n+const endpointUrl = \"/categories\";\n \n-const endpointUrl: string = \"/categories\"\n+function parseQueryParams(params: CategoryParams) {\n+  const query = new URLSearchParams();\n \n-export const categoriesApiSlice = apiSlice.injectEndpoints({\n-  endpoints: ({ query }) => ({\n-    getCategories: query<Results, void>({\n-      query: () => `${endpointUrl}`,\n-      providesTags: [\"Categories\"],\n-    })\n-  })\n-})\n+  if (params.page) {\n+    query.append(\"page\", params.page.toString());\n+  }\n \n-const category = {\n-  id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n-  name: \"Olive\",\n-  description: \"Earum quo at dolor tempore nisi.\",\n-  is_active: true,\n-  deleted_at: null,\n-  created_at: \"2020-06-06T11:00:00+0000\",\n-  updated_at: \"2020-06-06T11:00:00+0000\",\n-}\n+  if (params.perPage) {\n+    query.append(\"per_page\", params.perPage.toString());\n+  }\n \n-const categories = [\n-  category,\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120004\", name: \"Banana\" },\n-]\n+  if (params.search) {\n+    query.append(\"search\", params.search);\n+  }\n \n-export const initialState = [\n-  ...categories\n-]\n+  if (params.isActive) {\n+    query.append(\"is_active\", params.isActive.toString());\n+  }\n \n-const categoriesSlice = createSlice({\n-  name: \"categories\",\n-  initialState,\n-  reducers: {\n-    updateCategory(state, action) {\n-      const index = state.findIndex((category) => category.id === action.payload.id)\n+  return query.toString();\n+}\n \n-      state[index] = action.payload\n-    },\n-    createCategory(state, action) {\n-      console.log('action.payload', action.payload)\n-      state.push(action.payload)\n-    },\n-    deleteCategory(state, action) {\n-      const index = state.findIndex((category) => category.id === action.payload.id)\n+function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n+  const params = { page, perPage, search, isActive: true };\n \n-      state.splice(index, 1)\n\\ No newline at end of file\n-    }\n-  }\n-})\n+  return `${endpointUrl}?${parseQueryParams(params)}`;\n+}\n \n-// Selectors\n-export const selectCategories = (state: RootState) => state.categories\n+function deleteCategoryMutation(category: Category) {\n+  return {\n+    url: `${endpointUrl}/${category.id}`,\n+    method: \"DELETE\",\n+  };\n+}\n \n-export const selectCategoryById = (state: RootState, id: string) => {\n-  const category = state.categories.find((category) => category.id === id)\n+function createCategoryMutation(category: Category) {\n+  return { url: endpointUrl, method: \"POST\", body: category };\n+}\n \n-  console.log('category 2', id)\n+function updateCategoryMutation(category: Category) {\n+  return {\n+    url: `${endpointUrl}/${category.id}`,\n+    method: \"PUT\",\n+    body: category,\n+  };\n+}\n \n-  return (category ?? {\n-    id: \"\",\n-    name: \"\",\n-    description: \"\",\n-    is_active: false,\n-    deleted_at: null,\n-    created_at: \"\",\n-    updated_at: \"\",\n-  })\n+function getCategory({ id }: { id: string }) {\n+  return `${endpointUrl}/${id}`;\n }\n \n-export default categoriesSlice.reducer\n+export const categoriesApiSlice = apiSlice.injectEndpoints({\n+  endpoints: ({ query, mutation }) => ({\n+    getCategories: query<Results, CategoryParams>({\n+      query: getCategories,\n+      providesTags: [\"Categories\"],\n+    }),\n+    getCategory: query<Result, { id: string }>({\n+      query: getCategory,\n+      providesTags: [\"Categories\"],\n+    }),\n+    createCategory: mutation<Result, Category>({\n+      query: createCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+    deleteCategory: mutation<Result, { id: string }>({\n+      query: deleteCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+    updateCategory: mutation<Result, Category>({\n+      query: updateCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+  }),\n+});\n \n-export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n-\n-export const { useGetCategoriesQuery } = categoriesApiSlice\n+export const {\n+  useGetCategoriesQuery,\n+  useDeleteCategoryMutation,\n+  useCreateCategoryMutation,\n+  useUpdateCategoryMutation,\n+  useGetCategoryQuery,\n+} = categoriesApiSlice;\n"
                },
                {
                    "date": 1699029146850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,97 +1,92 @@\n-import { Result, Results, CategoryParams } from \"../../types/Category\";\n-import { apiSlice } from \"../api/apiSlice\";\n+import { createSlice } from \"@reduxjs/toolkit\"\n+import { RootState } from \"../../app/store\"\n+import { apiSlice } from \"../api/apiSlice\"\n+import { Results } from \"../../types/Category\"\n \n export interface Category {\n-  id: string;\n-  name: string;\n-  is_active: boolean;\n-  created_at: string;\n-  updated_at: string;\n-  deleted_at: null | string;\n-  description: null | string;\n+  id: string,\n+  name: string,\n+  description: string,\n+  is_active: boolean,\n+  deleted_at: string | null,\n+  created_at: string,\n+  updated_at: string,\n }\n-const endpointUrl = \"/categories\";\n \n-function parseQueryParams(params: CategoryParams) {\n-  const query = new URLSearchParams();\n+const endpointUrl: string = \"/categories\"\n \n-  if (params.page) {\n-    query.append(\"page\", params.page.toString());\n-  }\n+export const categoriesApiSlice = apiSlice.injectEndpoints({\n+  endpoints: ({ query }) => ({\n+    getCategories: query<Results, void>({\n+      query: () => `${endpointUrl}`,\n+      providesTags: [\"Categories\"],\n+    })\n+  })\n+})\n \n-  if (params.perPage) {\n-    query.append(\"per_page\", params.perPage.toString());\n-  }\n+const category = {\n+  id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n+  name: \"Olive\",\n+  description: \"Earum quo at dolor tempore nisi.\",\n+  is_active: true,\n+  deleted_at: null,\n+  created_at: \"2020-06-06T11:00:00+0000\",\n+  updated_at: \"2020-06-06T11:00:00+0000\",\n+}\n \n-  if (params.search) {\n-    query.append(\"search\", params.search);\n-  }\n+const categories = [\n+  category,\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120004\", name: \"Banana\" },\n+]\n \n-  if (params.isActive) {\n-    query.append(\"is_active\", params.isActive.toString());\n-  }\n+export const initialState = [\n+  ...categories\n+]\n \n-  return query.toString();\n-}\n+const categoriesSlice = createSlice({\n+  name: \"categories\",\n+  initialState,\n+  reducers: {\n+    updateCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n \n-function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n-  const params = { page, perPage, search, isActive: true };\n+      state[index] = action.payload\n+    },\n+    createCategory(state, action) {\n+      console.log('action.payload', action.payload)\n+      state.push(action.payload)\n+    },\n+    deleteCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n \n-  return `${endpointUrl}?${parseQueryParams(params)}`;\n-}\n+      state.splice(index, 1)\n+    }\n+  }\n+})\n \n-function deleteCategoryMutation(category: Category) {\n-  return {\n-    url: `${endpointUrl}/${category.id}`,\n-    method: \"DELETE\",\n-  };\n-}\n+// Selectors\n+export const selectCategories = (state: RootState) => state.categories\n \n-function createCategoryMutation(category: Category) {\n-  return { url: endpointUrl, method: \"POST\", body: category };\n-}\n+export const selectCategoryById = (state: RootState, id: string) => {\n+  const category = state.categories.find((category) => category.id === id)\n \n-function updateCategoryMutation(category: Category) {\n-  return {\n-    url: `${endpointUrl}/${category.id}`,\n-    method: \"PUT\",\n-    body: category,\n-  };\n-}\n+  console.log('category 2', id)\n \n-function getCategory({ id }: { id: string }) {\n-  return `${endpointUrl}/${id}`;\n+  return (category ?? {\n+    id: \"\",\n+    name: \"\",\n+    description: \"\",\n+    is_active: false,\n+    deleted_at: null,\n+    created_at: \"\",\n+    updated_at: \"\",\n+  })\n }\n \n-export const categoriesApiSlice = apiSlice.injectEndpoints({\n-  endpoints: ({ query, mutation }) => ({\n-    getCategories: query<Results, CategoryParams>({\n-      query: getCategories,\n-      providesTags: [\"Categories\"],\n-    }),\n-    getCategory: query<Result, { id: string }>({\n-      query: getCategory,\n-      providesTags: [\"Categories\"],\n-    }),\n-    createCategory: mutation<Result, Category>({\n-      query: createCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-    deleteCategory: mutation<Result, { id: string }>({\n-      query: deleteCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-    updateCategory: mutation<Result, Category>({\n-      query: updateCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-  }),\n-});\n+export default categoriesSlice.reducer\n \n-export const {\n-  useGetCategoriesQuery,\n-  useDeleteCategoryMutation,\n-  useCreateCategoryMutation,\n-  useUpdateCategoryMutation,\n-  useGetCategoryQuery,\n-} = categoriesApiSlice;\n+export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n+\n+export const { useGetCategoriesQuery } = categoriesApiSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699029484732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +1,97 @@\n-import { createSlice } from \"@reduxjs/toolkit\"\n-import { RootState } from \"../../app/store\"\n-import { apiSlice } from \"../api/apiSlice\"\n-import { Results } from \"../../types/Category\"\n+import { Result, Results, CategoryParams } from \"../../types/Category\";\n+import { apiSlice } from \"../api/apiSlice\";\n \n export interface Category {\n-  id: string,\n-  name: string,\n-  description: string,\n-  is_active: boolean,\n-  deleted_at: string | null,\n-  created_at: string,\n-  updated_at: string,\n+  id: string;\n+  name: string;\n+  is_active: boolean;\n+  created_at: string;\n+  updated_at: string;\n+  deleted_at: null | string;\n+  description: null | string;\n }\n+const endpointUrl = \"/categories\";\n \n-const endpointUrl: string = \"/categories\"\n+function parseQueryParams(params: CategoryParams) {\n+  const query = new URLSearchParams();\n \n-export const categoriesApiSlice = apiSlice.injectEndpoints({\n-  endpoints: ({ query }) => ({\n-    getCategories: query<Results, void>({\n-      query: () => `${endpointUrl}`,\n-      providesTags: [\"Categories\"],\n-    })\n-  })\n-})\n+  if (params.page) {\n+    query.append(\"page\", params.page.toString());\n+  }\n \n-const category = {\n-  id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n-  name: \"Olive\",\n-  description: \"Earum quo at dolor tempore nisi.\",\n-  is_active: true,\n-  deleted_at: null,\n-  created_at: \"2020-06-06T11:00:00+0000\",\n-  updated_at: \"2020-06-06T11:00:00+0000\",\n-}\n+  if (params.perPage) {\n+    query.append(\"per_page\", params.perPage.toString());\n+  }\n \n-const categories = [\n-  category,\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120004\", name: \"Banana\" },\n-]\n+  if (params.search) {\n+    query.append(\"search\", params.search);\n+  }\n \n-export const initialState = [\n-  ...categories\n-]\n+  if (params.isActive) {\n+    query.append(\"is_active\", params.isActive.toString());\n+  }\n \n-const categoriesSlice = createSlice({\n-  name: \"categories\",\n-  initialState,\n-  reducers: {\n-    updateCategory(state, action) {\n-      const index = state.findIndex((category) => category.id === action.payload.id)\n+  return query.toString();\n+}\n \n-      state[index] = action.payload\n-    },\n-    createCategory(state, action) {\n-      console.log('action.payload', action.payload)\n-      state.push(action.payload)\n-    },\n-    deleteCategory(state, action) {\n-      const index = state.findIndex((category) => category.id === action.payload.id)\n+function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n+  const params = { page, perPage, search, isActive: true };\n \n-      state.splice(index, 1)\n\\ No newline at end of file\n-    }\n-  }\n-})\n+  return `${endpointUrl}?${parseQueryParams(params)}`;\n+}\n \n-// Selectors\n-export const selectCategories = (state: RootState) => state.categories\n+function deleteCategoryMutation(category: Category) {\n+  return {\n+    url: `${endpointUrl}/${category.id}`,\n+    method: \"DELETE\",\n+  };\n+}\n \n-export const selectCategoryById = (state: RootState, id: string) => {\n-  const category = state.categories.find((category) => category.id === id)\n+function createCategoryMutation(category: Category) {\n+  return { url: endpointUrl, method: \"POST\", body: category };\n+}\n \n-  console.log('category 2', id)\n+function updateCategoryMutation(category: Category) {\n+  return {\n+    url: `${endpointUrl}/${category.id}`,\n+    method: \"PUT\",\n+    body: category,\n+  };\n+}\n \n-  return (category ?? {\n-    id: \"\",\n-    name: \"\",\n-    description: \"\",\n-    is_active: false,\n-    deleted_at: null,\n-    created_at: \"\",\n-    updated_at: \"\",\n-  })\n+function getCategory({ id }: { id: string }) {\n+  return `${endpointUrl}/${id}`;\n }\n \n-export default categoriesSlice.reducer\n+export const categoriesApiSlice = apiSlice.injectEndpoints({\n+  endpoints: ({ query, mutation }) => ({\n+    getCategories: query<Results, CategoryParams>({\n+      query: getCategories,\n+      providesTags: [\"Categories\"],\n+    }),\n+    getCategory: query<Result, { id: string }>({\n+      query: getCategory,\n+      providesTags: [\"Categories\"],\n+    }),\n+    createCategory: mutation<Result, Category>({\n+      query: createCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+    deleteCategory: mutation<Result, { id: string }>({\n+      query: deleteCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+    updateCategory: mutation<Result, Category>({\n+      query: updateCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+  }),\n+});\n \n-export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n-\n-export const { useGetCategoriesQuery } = categoriesApiSlice\n+export const {\n+  useGetCategoriesQuery,\n+  useDeleteCategoryMutation,\n+  useCreateCategoryMutation,\n+  useUpdateCategoryMutation,\n+  useGetCategoryQuery,\n+} = categoriesApiSlice;\n"
                },
                {
                    "date": 1699032631300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,97 +1,92 @@\n-import { Result, Results, CategoryParams } from \"../../types/Category\";\n-import { apiSlice } from \"../api/apiSlice\";\n+import { createSlice } from \"@reduxjs/toolkit\"\n+import { RootState } from \"../../app/store\"\n+import { apiSlice } from \"../api/apiSlice\"\n+import { Results } from \"../../types/Category\"\n \n export interface Category {\n-  id: string;\n-  name: string;\n-  is_active: boolean;\n-  created_at: string;\n-  updated_at: string;\n-  deleted_at: null | string;\n-  description: null | string;\n+  id: string,\n+  name: string,\n+  description: string,\n+  is_active: boolean,\n+  deleted_at: string | null,\n+  created_at: string,\n+  updated_at: string,\n }\n-const endpointUrl = \"/categories\";\n \n-function parseQueryParams(params: CategoryParams) {\n-  const query = new URLSearchParams();\n+const endpointUrl: string = \"/categories\"\n \n-  if (params.page) {\n-    query.append(\"page\", params.page.toString());\n-  }\n+export const categoriesApiSlice = apiSlice.injectEndpoints({\n+  endpoints: ({ query }) => ({\n+    getCategories: query<Results, void>({\n+      query: () => `${endpointUrl}`,\n+      providesTags: [\"Categories\"],\n+    })\n+  })\n+})\n \n-  if (params.perPage) {\n-    query.append(\"per_page\", params.perPage.toString());\n-  }\n+const category = {\n+  id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n+  name: \"Olive\",\n+  description: \"Earum quo at dolor tempore nisi.\",\n+  is_active: true,\n+  deleted_at: null,\n+  created_at: \"2020-06-06T11:00:00+0000\",\n+  updated_at: \"2020-06-06T11:00:00+0000\",\n+}\n \n-  if (params.search) {\n-    query.append(\"search\", params.search);\n-  }\n+const categories = [\n+  category,\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120004\", name: \"Banana\" },\n+]\n \n-  if (params.isActive) {\n-    query.append(\"is_active\", params.isActive.toString());\n-  }\n+export const initialState = [\n+  ...categories\n+]\n \n-  return query.toString();\n-}\n+const categoriesSlice = createSlice({\n+  name: \"categories\",\n+  initialState,\n+  reducers: {\n+    updateCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n \n-function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n-  const params = { page, perPage, search, isActive: true };\n+      state[index] = action.payload\n+    },\n+    createCategory(state, action) {\n+      console.log('action.payload', action.payload)\n+      state.push(action.payload)\n+    },\n+    deleteCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n \n-  return `${endpointUrl}?${parseQueryParams(params)}`;\n-}\n+      state.splice(index, 1)\n+    }\n+  }\n+})\n \n-function deleteCategoryMutation(category: Category) {\n-  return {\n-    url: `${endpointUrl}/${category.id}`,\n-    method: \"DELETE\",\n-  };\n-}\n+// Selectors\n+export const selectCategories = (state: RootState) => state.categories\n \n-function createCategoryMutation(category: Category) {\n-  return { url: endpointUrl, method: \"POST\", body: category };\n-}\n+export const selectCategoryById = (state: RootState, id: string) => {\n+  const category = state.categories.find((category) => category.id === id)\n \n-function updateCategoryMutation(category: Category) {\n-  return {\n-    url: `${endpointUrl}/${category.id}`,\n-    method: \"PUT\",\n-    body: category,\n-  };\n-}\n+  console.log('category 2', id)\n \n-function getCategory({ id }: { id: string }) {\n-  return `${endpointUrl}/${id}`;\n+  return (category ?? {\n+    id: \"\",\n+    name: \"\",\n+    description: \"\",\n+    is_active: false,\n+    deleted_at: null,\n+    created_at: \"\",\n+    updated_at: \"\",\n+  })\n }\n \n-export const categoriesApiSlice = apiSlice.injectEndpoints({\n-  endpoints: ({ query, mutation }) => ({\n-    getCategories: query<Results, CategoryParams>({\n-      query: getCategories,\n-      providesTags: [\"Categories\"],\n-    }),\n-    getCategory: query<Result, { id: string }>({\n-      query: getCategory,\n-      providesTags: [\"Categories\"],\n-    }),\n-    createCategory: mutation<Result, Category>({\n-      query: createCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-    deleteCategory: mutation<Result, { id: string }>({\n-      query: deleteCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-    updateCategory: mutation<Result, Category>({\n-      query: updateCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-  }),\n-});\n+export default categoriesSlice.reducer\n \n-export const {\n-  useGetCategoriesQuery,\n-  useDeleteCategoryMutation,\n-  useCreateCategoryMutation,\n-  useUpdateCategoryMutation,\n-  useGetCategoryQuery,\n-} = categoriesApiSlice;\n+export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n+\n+export const { useGetCategoriesQuery } = categoriesApiSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699035809316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,12 @@\n const endpointUrl: string = \"/categories\"\n \n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n-    getCategories: query<Results, void>({\n-      query: () => `${endpointUrl}`,\n+    getCategories: query<Results, CategoryParams>({\n+      query: getCategories,\n       providesTags: [\"Categories\"],\n-    })\n+    }),\n   })\n })\n \n const category = {\n"
                },
                {
                    "date": 1699035848944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,12 @@\n const endpointUrl: string = \"/categories\"\n \n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n-    getCategories: query<Results, CategoryParams>({\n-      query: getCategories,\n+    getCategories: query<Results, void>({\n+      query: () => `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n-    }),\n+    })\n   })\n })\n \n const category = {\n"
                },
                {
                    "date": 1699047863791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,13 +14,24 @@\n }\n \n const endpointUrl: string = \"/categories\"\n \n+const deleteCategory = (category: Category) => {\n+  return {\n+    url: `${endpointUrl}/${category.id}`,\n+    method: \"DELETE\",\n+  }\n+}\n+\n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query }) => ({\n     getCategories: query<Results, void>({\n       query: () => `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n+    }),\n+    deleteCategory: mutation<Results, void>({\n+      query: () => `${endpointUrl}`,\n+      providesTags: [\"Categories\"],\n     })\n   })\n })\n \n"
                },
                {
                    "date": 1699047922254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n       query: () => `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n     }),\n     deleteCategory: mutation<Results, void>({\n-      query: () => `${endpointUrl}`,\n+      query: deleteCategory,\n       providesTags: [\"Categories\"],\n     })\n   })\n })\n"
                },
                {
                    "date": 1699047929508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   }\n }\n \n export const categoriesApiSlice = apiSlice.injectEndpoints({\n-  endpoints: ({ query }) => ({\n+  endpoints: ({ query, mutation }) => ({\n     getCategories: query<Results, void>({\n       query: () => `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n     }),\n"
                },
                {
                    "date": 1699048110237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n }\n \n const endpointUrl: string = \"/categories\"\n \n-const deleteCategory = (category: Category) => {\n+function deleteCategoryMutation(category: Category) {\n   return {\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n   }\n"
                },
                {
                    "date": 1699048223159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n     getCategories: query<Results, void>({\n       query: () => `${endpointUrl}`,\n       providesTags: [\"Categories\"],\n     }),\n-    deleteCategory: mutation<Results, void>({\n-      query: deleteCategory,\n+    deleteCategory: mutation<Results, { id: string }>({\n+      query: deleteCategoryMutation,\n       providesTags: [\"Categories\"],\n     })\n   })\n })\n"
                },
                {
                    "date": 1699048238353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n       providesTags: [\"Categories\"],\n     }),\n     deleteCategory: mutation<Results, { id: string }>({\n       query: deleteCategoryMutation,\n-      providesTags: [\"Categories\"],\n+      invalidatesTags: [\"Categories\"],\n     })\n   })\n })\n \n"
                },
                {
                    "date": 1699048276455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,5 +99,5 @@\n export default categoriesSlice.reducer\n \n export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n \n-export const { useGetCategoriesQuery } = categoriesApiSlice\n\\ No newline at end of file\n+export const { useGetCategoriesQuery, useDeleteCategoryMutation } = categoriesApiSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699201455427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,12 @@\n }\n \n const endpointUrl: string = \"/categories\"\n \n+function parseQueryParams(params:) {\n+  return Object.keys(params).map((key) => `${key}=${params[key]}`)\n+}\n+\n function deleteCategoryMutation(category: Category) {\n   return {\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n"
                },
                {
                    "date": 1699201663931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n }\n \n const endpointUrl: string = \"/categories\"\n \n-function parseQueryParams(params:) {\n+function parseQueryParams(params: CategoryParams) {\n   return Object.keys(params).map((key) => `${key}=${params[key]}`)\n }\n \n function deleteCategoryMutation(category: Category) {\n"
                },
                {
                    "date": 1699202666937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { createSlice } from \"@reduxjs/toolkit\"\n import { RootState } from \"../../app/store\"\n import { apiSlice } from \"../api/apiSlice\"\n-import { Results } from \"../../types/Category\"\n+import { CategoryParams, Results } from \"../../types/Category\"\n \n export interface Category {\n   id: string,\n   name: string,\n@@ -15,9 +15,13 @@\n \n const endpointUrl: string = \"/categories\"\n \n function parseQueryParams(params: CategoryParams) {\n-  return Object.keys(params).map((key) => `${key}=${params[key]}`)\n+  const query = new URLSearchParams()\n+\n+  if (params.page) {\n+    query.append('page', params.page.toString())\n+  }\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699202684284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,12 @@\n \n   if (params.page) {\n     query.append('page', params.page.toString())\n   }\n+\n+  if (params.perPage) {\n+    query.append('page', params.page.toString())\n+  }\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699203316315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,18 @@\n     query.append('page', params.page.toString())\n   }\n \n   if (params.perPage) {\n-    query.append('page', params.page.toString())\n+    query.append('per_page', params.perPage.toString())\n   }\n+\n+  if (params.search) {\n+    query.append('search', params.search.toString())\n+  }\n+\n+  if (params.isActive) {\n+    query.append('is_active', params.isActive.toString())\n+  }\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699203345504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,10 @@\n \n   if (params.isActive) {\n     query.append('is_active', params.isActive.toString())\n   }\n+\n+  return query\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699203670228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   if (params.isActive) {\n     query.append('is_active', params.isActive.toString())\n   }\n \n-  return query\n+  return query.toString()\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699203751974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,15 @@\n \n   return query.toString()\n }\n \n+function getCategory(id: string) {\n+  return {\n+    url: `${endpointUrl}/${id}`,\n+    method: 'GET',\n+  }\n+}\n+\n function deleteCategoryMutation(category: Category) {\n   return {\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n"
                },
                {
                    "date": 1699206852305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n \n   return query.toString()\n }\n \n-function getCategory(id: string) {\n+function getCategories(id: string) {\n   return {\n     url: `${endpointUrl}/${id}`,\n     method: 'GET',\n   }\n"
                },
                {
                    "date": 1699212604876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   created_at: string,\n   updated_at: string,\n }\n \n-const endpointUrl: string = \"/categories\"\n+const endpointUrl: string = \"/categories?page=1\"\n \n function parseQueryParams(params: CategoryParams) {\n   const query = new URLSearchParams()\n \n@@ -37,14 +37,22 @@\n   return query.toString()\n }\n \n function getCategories(id: string) {\n+  const params = { page, perPage, search, isActive: true }\n   return {\n     url: `${endpointUrl}/${id}`,\n     method: 'GET',\n   }\n }\n \n+function getCategoryQuery(id: string) {\n+  return {\n+    url: `${endpointUrl}/${id}`,\n+    method: 'GET'\n+  }\n+}\n+\n function deleteCategoryMutation(category: Category) {\n   return {\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n"
                },
                {
                    "date": 1699212616533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     method: 'GET',\n   }\n }\n \n-function getCategoryQuery(id: string) {\n+function getCategories(id: string) {\n   return {\n     url: `${endpointUrl}/${id}`,\n     method: 'GET'\n   }\n"
                },
                {
                    "date": 1699212661763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     method: 'GET',\n   }\n }\n \n-function getCategories(id: string) {\n+function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n   return {\n     url: `${endpointUrl}/${id}`,\n     method: 'GET'\n   }\n"
                },
                {
                    "date": 1699212703796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,12 +45,9 @@\n   }\n }\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n-  return {\n-    url: `${endpointUrl}/${id}`,\n-    method: 'GET'\n-  }\n+  const params = { page, perPage, search }\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699213014737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n   }\n }\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n-  const params = { page, perPage, search }\n+  const params = { page, perPage, search, isActive: true }\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699213282645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,10 @@\n }\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n   const params = { page, perPage, search, isActive: true }\n+\n+  return `${endpointurl}?${parseQueryParams(params)}`\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699213475791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n   const params = { page, perPage, search, isActive: true }\n \n-  return `${endpointurl}?${parseQueryParams(params)}`\n+  return `${endpointUrl}?${parseQueryParams(params)}`\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699213504292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,16 +36,8 @@\n \n   return query.toString()\n }\n \n-function getCategories(id: string) {\n-  const params = { page, perPage, search, isActive: true }\n-  return {\n-    url: `${endpointUrl}/${id}`,\n-    method: 'GET',\n-  }\n-}\n-\n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n   const params = { page, perPage, search, isActive: true }\n \n   return `${endpointUrl}?${parseQueryParams(params)}`\n"
                },
                {
                    "date": 1699213561043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query, mutation }) => ({\n     getCategories: query<Results, void>({\n-      query: () => `${endpointUrl}`,\n+      query: getCategories(query.params),\n       providesTags: [\"Categories\"],\n     }),\n     deleteCategory: mutation<Results, { id: string }>({\n       query: deleteCategoryMutation,\n"
                },
                {
                    "date": 1699213638501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,10 @@\n }\n \n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query, mutation }) => ({\n-    getCategories: query<Results, void>({\n-      query: getCategories(query.params),\n+    getCategories: query<Results, CategoryParams>({\n+      query: getCategories,\n       providesTags: [\"Categories\"],\n     }),\n     deleteCategory: mutation<Results, { id: string }>({\n       query: deleteCategoryMutation,\n"
                },
                {
                    "date": 1699316420640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,10 @@\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n   const params = { page, perPage, search, isActive: true }\n \n+  console.log(${ endpointUrl } ? ${ parseQueryParams(params) })\n+\n   return `${endpointUrl}?${parseQueryParams(params)}`\n }\n \n function deleteCategoryMutation(category: Category) {\n"
                },
                {
                    "date": 1699316427976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n   const params = { page, perPage, search, isActive: true }\n \n-  console.log(${ endpointUrl } ? ${ parseQueryParams(params) })\n+  console.log(`${endpointUrl}?${parseQueryParams(params)}`)\n \n   return `${endpointUrl}?${parseQueryParams(params)}`\n }\n \n"
                },
                {
                    "date": 1699316527823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n   const params = { page, perPage, search, isActive: true }\n \n-  console.log(`${endpointUrl}?${parseQueryParams(params)}`)\n+  console.log(`getCategories ${endpointUrl}?${parseQueryParams(params)}`)\n \n   return `${endpointUrl}?${parseQueryParams(params)}`\n }\n \n"
                },
                {
                    "date": 1699316869591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,131 +3,97 @@\n import { apiSlice } from \"../api/apiSlice\"\n import { CategoryParams, Results } from \"../../types/Category\"\n \n export interface Category {\n-  id: string,\n-  name: string,\n-  description: string,\n-  is_active: boolean,\n-  deleted_at: string | null,\n-  created_at: string,\n-  updated_at: string,\n+  id: string;\n+  name: string;\n+  is_active: boolean;\n+  created_at: string;\n+  updated_at: string;\n+  deleted_at: null | string;\n+  description: null | string;\n }\n+const endpointUrl = \"/categories\";\n \n-const endpointUrl: string = \"/categories?page=1\"\n-\n function parseQueryParams(params: CategoryParams) {\n-  const query = new URLSearchParams()\n+  const query = new URLSearchParams();\n \n   if (params.page) {\n-    query.append('page', params.page.toString())\n+    query.append(\"page\", params.page.toString());\n   }\n \n   if (params.perPage) {\n-    query.append('per_page', params.perPage.toString())\n+    query.append(\"per_page\", params.perPage.toString());\n   }\n \n   if (params.search) {\n-    query.append('search', params.search.toString())\n+    query.append(\"search\", params.search);\n   }\n \n   if (params.isActive) {\n-    query.append('is_active', params.isActive.toString())\n+    query.append(\"is_active\", params.isActive.toString());\n   }\n \n-  return query.toString()\n+  return query.toString();\n }\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n-  const params = { page, perPage, search, isActive: true }\n+  const params = { page, perPage, search, isActive: true };\n \n-  console.log(`getCategories ${endpointUrl}?${parseQueryParams(params)}`)\n-\n-  return `${endpointUrl}?${parseQueryParams(params)}`\n+  return `${endpointUrl}?${parseQueryParams(params)}`;\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n-  }\n+  };\n }\n \n+function createCategoryMutation(category: Category) {\n+  return { url: endpointUrl, method: \"POST\", body: category };\n+}\n+\n+function updateCategoryMutation(category: Category) {\n+  return {\n+    url: `${endpointUrl}/${category.id}`,\n+    method: \"PUT\",\n+    body: category,\n+  };\n+}\n+\n+function getCategory({ id }: { id: string }) {\n+  return `${endpointUrl}/${id}`;\n+}\n+\n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query, mutation }) => ({\n     getCategories: query<Results, CategoryParams>({\n       query: getCategories,\n       providesTags: [\"Categories\"],\n     }),\n-    deleteCategory: mutation<Results, { id: string }>({\n+    getCategory: query<Result, { id: string }>({\n+      query: getCategory,\n+      providesTags: [\"Categories\"],\n+    }),\n+    createCategory: mutation<Result, Category>({\n+      query: createCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+    deleteCategory: mutation<Result, { id: string }>({\n       query: deleteCategoryMutation,\n       invalidatesTags: [\"Categories\"],\n-    })\n-  })\n-})\n+    }),\n+    updateCategory: mutation<Result, Category>({\n+      query: updateCategoryMutation,\n+      invalidatesTags: [\"Categories\"],\n+    }),\n+  }),\n+});\n \n-const category = {\n-  id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n-  name: \"Olive\",\n-  description: \"Earum quo at dolor tempore nisi.\",\n-  is_active: true,\n-  deleted_at: null,\n-  created_at: \"2020-06-06T11:00:00+0000\",\n-  updated_at: \"2020-06-06T11:00:00+0000\",\n-}\n-\n-const categories = [\n-  category,\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n-  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120004\", name: \"Banana\" },\n-]\n-\n\\ No newline at end of file\n-export const initialState = [\n-  ...categories\n-]\n-\n-const categoriesSlice = createSlice({\n-  name: \"categories\",\n-  initialState,\n-  reducers: {\n-    updateCategory(state, action) {\n-      const index = state.findIndex((category) => category.id === action.payload.id)\n-\n-      state[index] = action.payload\n-    },\n-    createCategory(state, action) {\n-      console.log('action.payload', action.payload)\n-      state.push(action.payload)\n-    },\n-    deleteCategory(state, action) {\n-      const index = state.findIndex((category) => category.id === action.payload.id)\n-\n-      state.splice(index, 1)\n-    }\n-  }\n-})\n-\n-// Selectors\n-export const selectCategories = (state: RootState) => state.categories\n-\n-export const selectCategoryById = (state: RootState, id: string) => {\n-  const category = state.categories.find((category) => category.id === id)\n-\n-  console.log('category 2', id)\n-\n-  return (category ?? {\n-    id: \"\",\n-    name: \"\",\n-    description: \"\",\n-    is_active: false,\n-    deleted_at: null,\n-    created_at: \"\",\n-    updated_at: \"\",\n-  })\n-}\n-\n-export default categoriesSlice.reducer\n-\n-export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n-\n-export const { useGetCategoriesQuery, useDeleteCategoryMutation } = categoriesApiSlice\n+export const {\n+  useGetCategoriesQuery,\n+  useDeleteCategoryMutation,\n+  useCreateCategoryMutation,\n+  useUpdateCategoryMutation,\n+  useGetCategoryQuery,\n+} = categoriesApiSlice;\n"
                },
                {
                    "date": 1699316944983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { createSlice } from \"@reduxjs/toolkit\"\n import { RootState } from \"../../app/store\"\n import { apiSlice } from \"../api/apiSlice\"\n-import { CategoryParams, Results } from \"../../types/Category\"\n+import { CategoryParams, Result, Results } from \"../../types/Category\"\n \n export interface Category {\n   id: string;\n   name: string;\n"
                },
                {
                    "date": 1699316964191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n-import { createSlice } from \"@reduxjs/toolkit\"\n-import { RootState } from \"../../app/store\"\n-import { apiSlice } from \"../api/apiSlice\"\n-import { CategoryParams, Result, Results } from \"../../types/Category\"\n+import { Result, Results, CategoryParams } from \"../../types/Category\";\n+import { apiSlice } from \"../api/apiSlice\";\n \n export interface Category {\n   id: string;\n   name: string;\n"
                },
                {
                    "date": 1699317234224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n-import { Result, Results, CategoryParams } from \"../../types/Category\";\n-import { apiSlice } from \"../api/apiSlice\";\n+import { createSlice } from \"@reduxjs/toolkit\"\n+import { RootState } from \"../../app/store\"\n+import { apiSlice } from \"../api/apiSlice\"\n+import { CategoryParams, Result, Results } from \"../../types/Category\"\n \n export interface Category {\n   id: string;\n   name: string;\n"
                },
                {
                    "date": 1699317240353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n-import { createSlice } from \"@reduxjs/toolkit\"\n-import { RootState } from \"../../app/store\"\n-import { apiSlice } from \"../api/apiSlice\"\n-import { CategoryParams, Result, Results } from \"../../types/Category\"\n+import { Result, Results, CategoryParams } from \"../../types/Category\";\n+import { apiSlice } from \"../api/apiSlice\";\n \n export interface Category {\n   id: string;\n   name: string;\n"
                },
                {
                    "date": 1699317254522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,97 +1,133 @@\n-import { Result, Results, CategoryParams } from \"../../types/Category\";\n-import { apiSlice } from \"../api/apiSlice\";\n+import { createSlice } from \"@reduxjs/toolkit\"\n+import { RootState } from \"../../app/store\"\n+import { apiSlice } from \"../api/apiSlice\"\n+import { CategoryParams, Results } from \"../../types/Category\"\n \n export interface Category {\n-  id: string;\n-  name: string;\n-  is_active: boolean;\n-  created_at: string;\n-  updated_at: string;\n-  deleted_at: null | string;\n-  description: null | string;\n+  id: string,\n+  name: string,\n+  description: string,\n+  is_active: boolean,\n+  deleted_at: string | null,\n+  created_at: string,\n+  updated_at: string,\n }\n-const endpointUrl = \"/categories\";\n \n+const endpointUrl: string = \"/categories?page=1\"\n+\n function parseQueryParams(params: CategoryParams) {\n-  const query = new URLSearchParams();\n+  const query = new URLSearchParams()\n \n   if (params.page) {\n-    query.append(\"page\", params.page.toString());\n+    query.append('page', params.page.toString())\n   }\n \n   if (params.perPage) {\n-    query.append(\"per_page\", params.perPage.toString());\n+    query.append('per_page', params.perPage.toString())\n   }\n \n   if (params.search) {\n-    query.append(\"search\", params.search);\n+    query.append('search', params.search.toString())\n   }\n \n   if (params.isActive) {\n-    query.append(\"is_active\", params.isActive.toString());\n+    query.append('is_active', params.isActive.toString())\n   }\n \n-  return query.toString();\n+  return query.toString()\n }\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n-  const params = { page, perPage, search, isActive: true };\n+  const params = { page, perPage, search, isActive: true }\n \n-  return `${endpointUrl}?${parseQueryParams(params)}`;\n+  console.log(`getCategories ${endpointUrl}?${parseQueryParams(params)}`)\n+\n+  return `${endpointUrl}?${parseQueryParams(params)}`\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n-  };\n+  }\n }\n \n-function createCategoryMutation(category: Category) {\n-  return { url: endpointUrl, method: \"POST\", body: category };\n-}\n-\n-function updateCategoryMutation(category: Category) {\n-  return {\n-    url: `${endpointUrl}/${category.id}`,\n-    method: \"PUT\",\n-    body: category,\n-  };\n-}\n-\n-function getCategory({ id }: { id: string }) {\n-  return `${endpointUrl}/${id}`;\n-}\n-\n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query, mutation }) => ({\n     getCategories: query<Results, CategoryParams>({\n       query: getCategories,\n       providesTags: [\"Categories\"],\n     }),\n-    getCategory: query<Result, { id: string }>({\n-      query: getCategory,\n-      providesTags: [\"Categories\"],\n-    }),\n-    createCategory: mutation<Result, Category>({\n-      query: createCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-    deleteCategory: mutation<Result, { id: string }>({\n+    deleteCategory: mutation<Results, { id: string }>({\n       query: deleteCategoryMutation,\n       invalidatesTags: [\"Categories\"],\n-    }),\n-    updateCategory: mutation<Result, Category>({\n-      query: updateCategoryMutation,\n-      invalidatesTags: [\"Categories\"],\n-    }),\n-  }),\n-});\n+    })\n+  })\n+})\n \n-export const {\n-  useGetCategoriesQuery,\n-  useDeleteCategoryMutation,\n-  useCreateCategoryMutation,\n-  useUpdateCategoryMutation,\n-  useGetCategoryQuery,\n-} = categoriesApiSlice;\n+const category = {\n+  id: \"199183e2-5d97-11ee-8c99-0242ac120001\",\n+  name: \"Olive\",\n+  description: \"Earum quo at dolor tempore nisi.\",\n+  is_active: true,\n+  deleted_at: null,\n+  created_at: \"2020-06-06T11:00:00+0000\",\n+  updated_at: \"2020-06-06T11:00:00+0000\",\n+}\n+\n+const categories = [\n+  category,\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120002\", name: \"Peach\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120003\", name: \"Apple\" },\n+  { ...category, id: \"199183e2-5d97-11ee-8c99-0242ac120004\", name: \"Banana\" },\n+]\n+\n+export const initialState = [\n+  ...categories\n+]\n+\n+const categoriesSlice = createSlice({\n+  name: \"categories\",\n+  initialState,\n+  reducers: {\n+    updateCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n+\n+      state[index] = action.payload\n+    },\n+    createCategory(state, action) {\n+      console.log('action.payload', action.payload)\n+      state.push(action.payload)\n+    },\n+    deleteCategory(state, action) {\n+      const index = state.findIndex((category) => category.id === action.payload.id)\n+\n+      state.splice(index, 1)\n+    }\n+  }\n+})\n+\n+// Selectors\n+export const selectCategories = (state: RootState) => state.categories\n+\n+export const selectCategoryById = (state: RootState, id: string) => {\n+  const category = state.categories.find((category) => category.id === id)\n+\n+  console.log('category 2', id)\n+\n+  return (category ?? {\n+    id: \"\",\n+    name: \"\",\n+    description: \"\",\n+    is_active: false,\n+    deleted_at: null,\n+    created_at: \"\",\n+    updated_at: \"\",\n+  })\n+}\n+\n+export default categoriesSlice.reducer\n+\n+export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n+\n+export const { useGetCategoriesQuery, useDeleteCategoryMutation } = categoriesApiSlice\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699317484933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,13 +37,11 @@\n   return query.toString()\n }\n \n function getCategories({ page = 1, perPage = 10, search = \"\" }) {\n-  const params = { page, perPage, search, isActive: true }\n+  const params = { page, perPage, search, isActive: true };\n \n-  console.log(`getCategories ${endpointUrl}?${parseQueryParams(params)}`)\n-\n-  return `${endpointUrl}?${parseQueryParams(params)}`\n+  return `${endpointUrl}?${parseQueryParams(params)}`;\n }\n \n function deleteCategoryMutation(category: Category) {\n   return {\n"
                },
                {
                    "date": 1699317751001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,10 +110,8 @@\n \n export const selectCategoryById = (state: RootState, id: string) => {\n   const category = state.categories.find((category) => category.id === id)\n \n-  console.log('category 2', id)\n-\n   return (category ?? {\n     id: \"\",\n     name: \"\",\n     description: \"\",\n"
                },
                {
                    "date": 1699318294190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   created_at: string,\n   updated_at: string,\n }\n \n-const endpointUrl: string = \"/categories?page=1\"\n+const endpointUrl: string = \"/categories?\"\n \n function parseQueryParams(params: CategoryParams) {\n   const query = new URLSearchParams()\n \n"
                },
                {
                    "date": 1699323373519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,21 +46,20 @@\n function deleteCategoryMutation(category: Category) {\n   return {\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n-  }\n+  };\n }\n-\n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query, mutation }) => ({\n     getCategories: query<Results, CategoryParams>({\n       query: getCategories,\n       providesTags: [\"Categories\"],\n     }),\n-    deleteCategory: mutation<Results, { id: string }>({\n+    deleteCategory: mutation<Result, { id: string }>({\n       query: deleteCategoryMutation,\n       invalidatesTags: [\"Categories\"],\n-    })\n+    }),\n   })\n })\n \n const category = {\n"
                },
                {
                    "date": 1699323381272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   created_at: string,\n   updated_at: string,\n }\n \n-const endpointUrl: string = \"/categories?\"\n+const endpointUrl: string = \"/categories\"\n \n function parseQueryParams(params: CategoryParams) {\n   const query = new URLSearchParams()\n \n"
                },
                {
                    "date": 1699323428376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { createSlice } from \"@reduxjs/toolkit\"\n import { RootState } from \"../../app/store\"\n import { apiSlice } from \"../api/apiSlice\"\n-import { CategoryParams, Results } from \"../../types/Category\"\n+import { CategoryParams, Result, Results } from \"../../types/Category\"\n \n export interface Category {\n   id: string,\n   name: string,\n"
                },
                {
                    "date": 1699324060430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,17 @@\n     url: `${endpointUrl}/${category.id}`,\n     method: \"DELETE\",\n   };\n }\n+\n+function createCategoryMutation(category: Category) {\n+  return {\n+    url: endpointUrl,\n+    method: \"POST\",\n+    body: category\n+  }\n+}\n+\n export const categoriesApiSlice = apiSlice.injectEndpoints({\n   endpoints: ({ query, mutation }) => ({\n     getCategories: query<Results, CategoryParams>({\n       query: getCategories,\n"
                },
                {
                    "date": 1699324175328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,11 @@\n     getCategories: query<Results, CategoryParams>({\n       query: getCategories,\n       providesTags: [\"Categories\"],\n     }),\n+    createCategory: mutation<Result, Category>({\n+      query: createCategoryMutation,\n+    }),\n     deleteCategory: mutation<Result, { id: string }>({\n       query: deleteCategoryMutation,\n       invalidatesTags: [\"Categories\"],\n     }),\n"
                },
                {
                    "date": 1699324205909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n       providesTags: [\"Categories\"],\n     }),\n     createCategory: mutation<Result, Category>({\n       query: createCategoryMutation,\n+      invalidateTags: ['Categories']\n     }),\n     deleteCategory: mutation<Result, { id: string }>({\n       query: deleteCategoryMutation,\n       invalidatesTags: [\"Categories\"],\n"
                },
                {
                    "date": 1699324303820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n       providesTags: [\"Categories\"],\n     }),\n     createCategory: mutation<Result, Category>({\n       query: createCategoryMutation,\n-      invalidateTags: ['Categories']\n+      invalidatesTags: ['Categories']\n     }),\n     deleteCategory: mutation<Result, { id: string }>({\n       query: deleteCategoryMutation,\n       invalidatesTags: [\"Categories\"],\n"
                },
                {
                    "date": 1699324343338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,5 +137,5 @@\n export default categoriesSlice.reducer\n \n export const { updateCategory, createCategory, deleteCategory } = categoriesSlice.actions\n \n-export const { useGetCategoriesQuery, useDeleteCategoryMutation } = categoriesApiSlice\n\\ No newline at end of file\n+export const { useGetCategoriesQuery, useDeleteCategoryMutation, useCreateCategoryMutation } = categoriesApiSlice\n\\ No newline at end of file\n"
                }
            ],
            "date": 1695861518172,
            "name": "Commit-0",
            "content": "const category = {\n  id: \"199183e2-5d97-11ee-8c99-0242ac120002\",\n  name: \"Olive\",\n  description: \"Earum quo at dolor tempore nisi.\",\n  is_active: true,\n  delete_at: null,\n  created_at: \"2020-06-06T11:00:00.000Z\",\n  updated_at: \"2020-06-06T11:00:00.000Z\",\n}"
        }
    ]
}