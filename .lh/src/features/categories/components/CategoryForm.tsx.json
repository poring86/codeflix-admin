{
    "sourceFile": "src/features/categories/components/CategoryForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1696083248643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1696083469453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,23 @@\n-import React from 'react'\n+import { Box, Grid, FormControl, TextField, FormGroup, FormControlLabel, Switch, Button, Link } from '@mui/material'\n+import React, { useState } from 'react'\n \n export default function CategoryForm() {\n+  const [isDisabled, setIsDisabled] = useState(false)\n+\n+  const [category, setCategory] = useState<Category>({\n+    id: \"\",\n+    name: \"\",\n+    description: \"\",\n+    is_active: false,\n+    created_at: \"\",\n+    delete_at: \"\",\n+    updated_at: \"\",\n+  })\n+  const handleChange = (e: any) => {\n+\n+  }\n+\n   return (\n     <Box p={2}>\n       <form>\n         <Grid container spacing={3}>\n"
                },
                {
                    "date": 1696083475045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { Box, Grid, FormControl, TextField, FormGroup, FormControlLabel, Switch, Button, Link } from '@mui/material'\n import React, { useState } from 'react'\n+import { Category } from '../categorySlice'\n \n export default function CategoryForm() {\n   const [isDisabled, setIsDisabled] = useState(false)\n \n"
                },
                {
                    "date": 1696084120577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,17 @@\n import { Box, Grid, FormControl, TextField, FormGroup, FormControlLabel, Switch, Button, Link } from '@mui/material'\n import React, { useState } from 'react'\n import { Category } from '../categorySlice'\n \n+type Props = {\n+  categories: Category,\n+  isdisabled: boolean,\n+  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n+  handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n+  handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void\n+\n+}\n+\n export default function CategoryForm() {\n   const [isDisabled, setIsDisabled] = useState(false)\n \n   const [category, setCategory] = useState<Category>({\n"
                },
                {
                    "date": 1696084147597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,12 @@\n \n type Props = {\n   categories: Category,\n   isdisabled: boolean,\n+  isLoading: boolean\n   onSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n   handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n   handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void\n-\n }\n \n export default function CategoryForm() {\n   const [isDisabled, setIsDisabled] = useState(false)\n"
                },
                {
                    "date": 1696084175329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,17 +2,17 @@\n import React, { useState } from 'react'\n import { Category } from '../categorySlice'\n \n type Props = {\n-  categories: Category,\n-  isdisabled: boolean,\n+  categories: Category\n+  isdisabled: boolean\n   isLoading: boolean\n   onSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n   handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n   handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void\n }\n \n-export default function CategoryForm() {\n+export default function CategoryForm({ }: Props) {\n   const [isDisabled, setIsDisabled] = useState(false)\n \n   const [category, setCategory] = useState<Category>({\n     id: \"\",\n"
                },
                {
                    "date": 1696084232267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,14 @@\n   handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n   handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void\n }\n \n-export default function CategoryForm({ }: Props) {\n+export default function CategoryForm({\n+  category,\n+  isDisabled = false,\n+  isLoading = false,\n+  onSubmit\n+}: Props) {\n   const [isDisabled, setIsDisabled] = useState(false)\n \n   const [category, setCategory] = useState<Category>({\n     id: \"\",\n"
                },
                {
                    "date": 1696084251730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,11 @@\n export default function CategoryForm({\n   category,\n   isDisabled = false,\n   isLoading = false,\n-  onSubmit\n+  onSubmit,\n+  handleChange,\n+  handleToggle,\n }: Props) {\n   const [isDisabled, setIsDisabled] = useState(false)\n \n   const [category, setCategory] = useState<Category>({\n"
                },
                {
                    "date": 1696084504441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,12 @@\n   const handleChange = (e: any) => {\n \n   }\n \n+  const handleToggle = (e: any) => {\n+\n+  }\n+\n   return (\n     <Box p={2}>\n       <form>\n         <Grid container spacing={3}>\n"
                },
                {
                    "date": 1696084514504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,11 @@\n     delete_at: \"\",\n     updated_at: \"\",\n   })\n   const handleChange = (e: any) => {\n-\n   }\n \n   const handleToggle = (e: any) => {\n-\n   }\n \n   return (\n     <Box p={2}>\n"
                },
                {
                    "date": 1696091646267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,19 +18,8 @@\n   onSubmit,\n   handleChange,\n   handleToggle,\n }: Props) {\n-  const [isDisabled, setIsDisabled] = useState(false)\n-\n-  const [category, setCategory] = useState<Category>({\n-    id: \"\",\n-    name: \"\",\n-    description: \"\",\n-    is_active: false,\n-    created_at: \"\",\n-    delete_at: \"\",\n-    updated_at: \"\",\n-  })\n   const handleChange = (e: any) => {\n   }\n \n   const handleToggle = (e: any) => {\n"
                },
                {
                    "date": 1696091675622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,9 @@\n   onSubmit,\n   handleChange,\n   handleToggle,\n }: Props) {\n-  const handleChange = (e: any) => {\n-  }\n \n-  const handleToggle = (e: any) => {\n-  }\n-\n   return (\n     <Box p={2}>\n       <form>\n         <Grid container spacing={3}>\n"
                },
                {
                    "date": 1696091683725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import React, { useState } from 'react'\n import { Category } from '../categorySlice'\n \n type Props = {\n-  categories: Category\n+  category: Category\n   isdisabled: boolean\n   isLoading: boolean\n   onSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n   handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n"
                },
                {
                    "date": 1696091763640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Box, Grid, FormControl, TextField, FormGroup, FormControlLabel, Switch, Button, Link } from '@mui/material'\n-import React, { useState } from 'react'\n+import React from 'react'\n import { Category } from '../categorySlice'\n \n type Props = {\n   category: Category\n"
                },
                {
                    "date": 1696091818483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n               <FormControlLabel\n                 control={\n                   <Switch\n                     checked={category.is_active}\n-                    onChange={handleChange}\n+                    onChange={handleToggle}\n                     name=\"is_active\"\n                     color=\"secondary\"\n                     inputProps={{ 'aria-label': 'secondary checkbox' }}\n                   />\n"
                },
                {
                    "date": 1696091841521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   isdisabled: boolean\n   isLoading: boolean\n   onSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n   handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n-  handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void\n+  handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void;\n }\n \n export default function CategoryForm({\n   category,\n"
                },
                {
                    "date": 1696091866688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,16 +14,16 @@\n export default function CategoryForm({\n   category,\n   isDisabled = false,\n   isLoading = false,\n-  onSubmit,\n+  handleSubmit,\n   handleChange,\n   handleToggle,\n }: Props) {\n \n   return (\n     <Box p={2}>\n-      <form>\n+      <form onSubmit={handleSubmit}>\n         <Grid container spacing={3}>\n           <Grid item xs={12}>\n             <FormControl fullWidth>\n               <TextField\n"
                },
                {
                    "date": 1696092114496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n               <TextField\n                 required\n                 name=\"name\"\n                 label=\"Name\"\n-                value={category.name}\n+                value={category.name || \"\"}\n                 disabled={isDisabled}\n                 onChange={handleChange}\n               />\n             </FormControl>\n"
                },
                {
                    "date": 1696092123949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n                 label=\"Name\"\n                 value={category.name || \"\"}\n                 disabled={isDisabled}\n                 onChange={handleChange}\n+                inputProps={{ \"data-testid\": \"name\" }}\n               />\n             </FormControl>\n           </Grid>\n \n"
                },
                {
                    "date": 1696092133295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n                 label=\"Description\"\n                 value={category.description}\n                 disabled={isDisabled}\n                 onChange={handleChange}\n+                inputProps={{ \"data-testid\": \"name\" }}\n               />\n             </FormControl>\n           </Grid>\n \n"
                },
                {
                    "date": 1696092197725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,15 @@\n             <Box display=\"flex\" gap={2}>\n               <Button variant=\"contained\" component={Link} to=\"/categories\">\n                 Back\n               </Button>\n-              <Button variant=\"contained\" color=\"secondary\" disabled={isDisabled}>\n-                Save\n+              <Button\n+                type=\"submit\"\n+                variant=\"contained\"\n+                color=\"secondary\"\n+                disabled={isdisabled || isLoading}\n+              >\n+                {isLoading ? \"Loading...\" : \"Save\"}\n               </Button>\n             </Box>\n           </Grid>\n         </Grid>\n"
                },
                {
                    "date": 1696092207870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n               <Button\n                 type=\"submit\"\n                 variant=\"contained\"\n                 color=\"secondary\"\n-                disabled={isdisabled || isLoading}\n+                disabled={isDisabled || isLoading}\n               >\n                 {isLoading ? \"Loading...\" : \"Save\"}\n               </Button>\n             </Box>\n"
                },
                {
                    "date": 1696092242007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Category } from '../categorySlice'\n \n type Props = {\n   category: Category\n-  isdisabled: boolean\n+  isDisabled: boolean\n   isLoading: boolean\n   onSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n   handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n   handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void;\n"
                },
                {
                    "date": 1696092248335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n type Props = {\n   category: Category\n   isDisabled: boolean\n   isLoading: boolean\n-  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n+  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n   handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n   handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void;\n }\n \n"
                },
                {
                    "date": 1696092481900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,13 +74,14 @@\n             <Box display=\"flex\" gap={2}>\n               <Button variant=\"contained\" component={Link} to=\"/categories\">\n                 Back\n               </Button>\n+\n               <Button\n                 type=\"submit\"\n                 variant=\"contained\"\n                 color=\"secondary\"\n-                disabled={isDisabled || isLoading}\n+                disabled={isdisabled || isLoading}\n               >\n                 {isLoading ? \"Loading...\" : \"Save\"}\n               </Button>\n             </Box>\n"
                },
                {
                    "date": 1696092488685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n               <Button\n                 type=\"submit\"\n                 variant=\"contained\"\n                 color=\"secondary\"\n-                disabled={isdisabled || isLoading}\n+                disabled={isDisabled || isLoading}\n               >\n                 {isLoading ? \"Loading...\" : \"Save\"}\n               </Button>\n             </Box>\n"
                },
                {
                    "date": 1696092517392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,15 +2,15 @@\n import React from 'react'\n import { Category } from '../categorySlice'\n \n type Props = {\n-  category: Category\n-  isDisabled: boolean\n-  isLoading: boolean\n-  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n-  handleChange: (e: React.FormEvent<HTMLFormElement>) => void\n+  category: Category;\n+  isDisabled?: boolean;\n+  isLoading?: boolean;\n+  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n+  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n   handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void;\n-}\n+};\n \n export default function CategoryForm({\n   category,\n   isDisabled = false,\n"
                },
                {
                    "date": 1696092536126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Box, Grid, FormControl, TextField, FormGroup, FormControlLabel, Switch, Button, Link } from '@mui/material'\n+import { Box, Grid, FormControl, TextField, FormGroup, FormControlLabel, Switch, Button } from '@mui/material'\n import React from 'react'\n import { Category } from '../categorySlice'\n \n type Props = {\n"
                },
                {
                    "date": 1696092543853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { Box, Grid, FormControl, TextField, FormGroup, FormControlLabel, Switch, Button } from '@mui/material'\n import React from 'react'\n import { Category } from '../categorySlice'\n+import { Link } from 'react-router-dom';\n \n type Props = {\n   category: Category;\n   isDisabled?: boolean;\n"
                },
                {
                    "date": 1699827939741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 label=\"Description\"\n                 value={category.description}\n                 disabled={isDisabled}\n                 onChange={handleChange}\n-                inputProps={{ \"data-testid\": \"name\" }}\n+                inputProps={{ \"data-testid\": \"description\" }}\n               />\n             </FormControl>\n           </Grid>\n \n"
                },
                {
                    "date": 1699828116957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n                     checked={category.is_active}\n                     onChange={handleToggle}\n                     name=\"is_active\"\n                     color=\"secondary\"\n+                    data-testid=\"is_active\"\n                     inputProps={{ 'aria-label': 'secondary checkbox' }}\n                   />\n                 }\n                 label=\"Active\"\n"
                },
                {
                    "date": 1699913943863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,9 @@\n               <Button\n                 type=\"submit\"\n                 variant=\"contained\"\n                 color=\"secondary\"\n+                data-testid=\"Save\"\n                 disabled={isDisabled || isLoading}\n               >\n                 {isLoading ? \"Loading...\" : \"Save\"}\n               </Button>\n"
                },
                {
                    "date": 1699915517741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n   handleToggle: (e: React.ChangeEvent<HTMLInputElement>) => void;\n };\n \n-export default function CategoryForm({\n+function CategoryForm({\n   category,\n   isDisabled = false,\n   isLoading = false,\n   handleSubmit,\n@@ -94,4 +94,7 @@\n \n     </Box>\n   )\n }\n+\n+export { CategoryForm }\n+export type { Props as CategoryFormProps }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699915723401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,11 +37,8 @@\n                 inputProps={{ \"data-testid\": \"name\" }}\n               />\n             </FormControl>\n           </Grid>\n-\n-\n-\n           <Grid item xs={12}>\n             <FormControl fullWidth>\n               <TextField\n                 required\n"
                }
            ],
            "date": 1696083248643,
            "name": "Commit-0",
            "content": "import React from 'react'\n\nexport default function CategoryForm() {\n  return (\n    <Box p={2}>\n      <form>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <FormControl fullWidth>\n              <TextField\n                required\n                name=\"name\"\n                label=\"Name\"\n                value={category.name}\n                disabled={isDisabled}\n                onChange={handleChange}\n              />\n            </FormControl>\n          </Grid>\n\n\n\n          <Grid item xs={12}>\n            <FormControl fullWidth>\n              <TextField\n                required\n                name=\"description\"\n                label=\"Description\"\n                value={category.description}\n                disabled={isDisabled}\n                onChange={handleChange}\n              />\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={category.is_active}\n                    onChange={handleChange}\n                    name=\"is_active\"\n                    color=\"secondary\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  />\n                }\n                label=\"Active\"\n              />\n            </FormGroup>\n          </Grid>\n          <Grid item xs={12}>\n            <Box display=\"flex\" gap={2}>\n              <Button variant=\"contained\" component={Link} to=\"/categories\">\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"secondary\" disabled={isDisabled}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </form>\n\n    </Box>\n  )\n}\n"
        }
    ]
}