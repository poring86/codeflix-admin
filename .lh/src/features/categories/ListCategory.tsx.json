{
    "sourceFile": "src/features/categories/ListCategory.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 91,
            "patches": [
                {
                    "date": 1695855743800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695990990111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,54 @@\n import React from 'react'\n+import { useAppSelector } from '../../app/hooks'\n+import { selectCategories } from './categorySlice'\n+import { Box, Button, Typography } from '@mui/material'\n+import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n+  const categories = useAppSelector(selectCategories)\n+\n+  const rows: GridRowsProp = categories.map((category) => ({\n+    id: category.id,\n+    name: category.name,\n+    description: category.description,\n+    isActive: category.is_active,\n+    createdAt: category.created_at\n+  }))\n+\n+  const columns: GridColDef[] = [\n+    { field: 'name', headerName: \"Name\", flex: 1 },\n+    { field: 'description', headerName: \"Description\", flex: 1 },\n+    {\n+      field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n+    },\n+    {\n+      field: 'createdAt', headerName: \"Active\", flex: 1\n+    },\n+  ]\n+\n+  function renderIsActiveCell(rowData: GridRenderCellParams) {\n+    return (\n+      <Typography color={rowData.value ? \"primary\" : \"secondary\"}>\n+        {rowData.value ? \"Active\" : \"Inactive\"}\n+      </Typography>\n+    )\n+  }\n+\n   return (\n-    <div>ListCategory</div>\n+    <Box maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n+      <Box display=\"flex\" justifyContent=\"flex-end\">\n+        <Button>New category</Button>\n+      </Box>\n+      <Typography variant='h3' component='h1'>\n+        Category page list\n+      </Typography>\n+\n+\n+      <div style={{ height: 500, width: \"100%\" }}>\n+        <DataGrid columns={columns} rows={rows} />\n+      </div>\n+\n+\n+    </Box>\n   )\n }\n"
                },
                {
                    "date": 1695991557798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     id: category.id,\n     name: category.name,\n     description: category.description,\n     isActive: category.is_active,\n-    createdAt: category.created_at\n+    createdAt: new Date(category.created_at).toLocaleDateString('pt-BR')\n   }))\n \n   const columns: GridColDef[] = [\n     { field: 'name', headerName: \"Name\", flex: 1 },\n"
                },
                {
                    "date": 1695991639530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,16 @@\n   }))\n \n   const columns: GridColDef[] = [\n     { field: 'name', headerName: \"Name\", flex: 1 },\n-    { field: 'description', headerName: \"Description\", flex: 1 },\n+\n     {\n       field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n     },\n     {\n       field: 'createdAt', headerName: \"Active\", flex: 1\n     },\n+    { field: 'description', headerName: \"Description\", flex: 1 },\n   ]\n \n   function renderIsActiveCell(rowData: GridRenderCellParams) {\n     return (\n"
                },
                {
                    "date": 1695991732735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,14 +16,13 @@\n   }))\n \n   const columns: GridColDef[] = [\n     { field: 'name', headerName: \"Name\", flex: 1 },\n-\n     {\n       field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n     },\n     {\n-      field: 'createdAt', headerName: \"Active\", flex: 1\n+      field: 'createdAt', headerName: \"Created At\", flex: 1\n     },\n     { field: 'description', headerName: \"Description\", flex: 1 },\n   ]\n \n"
                },
                {
                    "date": 1695991746233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,12 +19,13 @@\n     { field: 'name', headerName: \"Name\", flex: 1 },\n     {\n       field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n     },\n+\n+    { field: 'description', headerName: \"Description\", flex: 1 },\n     {\n       field: 'createdAt', headerName: \"Created At\", flex: 1\n     },\n-    { field: 'description', headerName: \"Description\", flex: 1 },\n   ]\n \n   function renderIsActiveCell(rowData: GridRenderCellParams) {\n     return (\n"
                },
                {
                    "date": 1695991794654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,15 @@\n     { field: 'name', headerName: \"Name\", flex: 1 },\n     {\n       field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n     },\n-\n     { field: 'description', headerName: \"Description\", flex: 1 },\n     {\n       field: 'createdAt', headerName: \"Created At\", flex: 1\n     },\n+    {\n+      field: 'id', headerName: \"Actions\", flex: 1\n+    },\n   ]\n \n   function renderIsActiveCell(rowData: GridRenderCellParams) {\n     return (\n"
                },
                {
                    "date": 1695993793138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React from 'react'\n import { useAppSelector } from '../../app/hooks'\n import { selectCategories } from './categorySlice'\n-import { Box, Button, Typography } from '@mui/material'\n+import { Box, Button, IconButton, Typography } from '@mui/material'\n+import { DeleteIcon } from '@mui/icons-material'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const categories = useAppSelector(selectCategories)\n@@ -24,12 +25,20 @@\n     {\n       field: 'createdAt', headerName: \"Created At\", flex: 1\n     },\n     {\n-      field: 'id', headerName: \"Actions\", flex: 1\n+      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell\n     },\n   ]\n \n+  function renderActionCell(params: GridRenderCellParams) {\n+    return (\n+      <IconButton color=\"secondary\" onClick={() => console.log(\"isActiveCell\")}>\n+        <DeleteIcon />\n+      </IconButton>\n+    )\n+  }\n+\n   function renderIsActiveCell(rowData: GridRenderCellParams) {\n     return (\n       <Typography color={rowData.value ? \"primary\" : \"secondary\"}>\n         {rowData.value ? \"Active\" : \"Inactive\"}\n"
                },
                {
                    "date": 1695993842059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React from 'react'\n import { useAppSelector } from '../../app/hooks'\n import { selectCategories } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n-import { DeleteIcon } from '@mui/icons-material'\n+import DeleteIcon from '@mui/icons-material/delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const categories = useAppSelector(selectCategories)\n"
                },
                {
                    "date": 1695993870762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React from 'react'\n import { useAppSelector } from '../../app/hooks'\n import { selectCategories } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n-import DeleteIcon from '@mui/icons-material/delete'\n+import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const categories = useAppSelector(selectCategories)\n"
                },
                {
                    "date": 1696003408954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useAppSelector } from '../../app/hooks'\n import { selectCategories } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n-import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp } from '@mui/x-data-grid'\n+import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const categories = useAppSelector(selectCategories)\n \n@@ -56,9 +56,9 @@\n       </Typography>\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n-        <DataGrid columns={columns} rows={rows} />\n+        <DataGrid components={{ Toolbar: GridToolbar }} rowsPerPageOptions={[2, 20, 50, 100]} columns={columns} rows={rows} />\n       </div>\n \n \n     </Box>\n"
                },
                {
                    "date": 1696003508793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       </Typography>\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n-        <DataGrid components={{ Toolbar: GridToolbar }} rowsPerPageOptions={[2, 20, 50, 100]} columns={columns} rows={rows} />\n+        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} />\n       </div>\n \n \n     </Box>\n"
                },
                {
                    "date": 1696004052575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,14 @@\n       </Typography>\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n-        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} />\n+        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} componentsProps={{\n+          toolbar: {\n+            showQuickFilter: true,\n+            quickFilterProps: { debounceMs: 500 }\n+          }\n+        }} />\n       </div>\n \n \n     </Box>\n"
                },
                {
                    "date": 1696004191918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n         <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} componentsProps={{\n           toolbar: {\n             showQuickFilter: true,\n             quickFilterProps: { debounceMs: 500 }\n+            disableColumnSelector = { true}\n           }\n         }} />\n       </div>\n \n"
                },
                {
                    "date": 1696004198461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       <div style={{ height: 500, width: \"100%\" }}>\n         <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} componentsProps={{\n           toolbar: {\n             showQuickFilter: true,\n-            quickFilterProps: { debounceMs: 500 }\n+            quickFilterProps: { debounceMs: 500 },\n             disableColumnSelector = { true}\n           }\n         }} />\n       </div>\n"
                },
                {
                    "date": 1696004216191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n         <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} componentsProps={{\n           toolbar: {\n             showQuickFilter: true,\n             quickFilterProps: { debounceMs: 500 },\n-            disableColumnSelector = { true}\n+            disableColumnSelector: true\n           }\n         }} />\n       </div>\n \n"
                },
                {
                    "date": 1696004340428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,15 +56,17 @@\n       </Typography>\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n-        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} componentsProps={{\n+        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} disableColumnSelector={true} disableColumnFilter={true} componentsProps={{\n           toolbar: {\n             showQuickFilter: true,\n             quickFilterProps: { debounceMs: 500 },\n-            disableColumnSelector: true\n+\n+\n           }\n-        }} />\n+        }}\n+        />\n       </div>\n \n \n     </Box>\n"
                },
                {
                    "date": 1696004348570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,8 @@\n         <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} disableColumnSelector={true} disableColumnFilter={true} componentsProps={{\n           toolbar: {\n             showQuickFilter: true,\n             quickFilterProps: { debounceMs: 500 },\n-\n-\n           }\n         }}\n         />\n       </div>\n"
                },
                {
                    "date": 1696004370304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       </Typography>\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n-        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} disableColumnSelector={true} disableColumnFilter={true} componentsProps={{\n+        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} disableColumnSelector={true} disableColumnFilter={true} disableDensitySelector={true} componentsProps={{\n           toolbar: {\n             showQuickFilter: true,\n             quickFilterProps: { debounceMs: 500 },\n           }\n"
                },
                {
                    "date": 1696004416485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       </Typography>\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n-        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} disableColumnSelector={true} disableColumnFilter={true} disableDensitySelector={true} componentsProps={{\n+        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} disableColumnSelector={true} disableColumnFilter={true} disableDensitySelector={true} checkboxSelection={true} componentsProps={{\n           toolbar: {\n             showQuickFilter: true,\n             quickFilterProps: { debounceMs: 500 },\n           }\n"
                },
                {
                    "date": 1696004428505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,14 +56,17 @@\n       </Typography>\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n-        <DataGrid components={{ Toolbar: GridToolbar }} columns={columns} rows={rows} disableColumnSelector={true} disableColumnFilter={true} disableDensitySelector={true} checkboxSelection={true} componentsProps={{\n-          toolbar: {\n-            showQuickFilter: true,\n-            quickFilterProps: { debounceMs: 500 },\n-          }\n-        }}\n+        <DataGrid\n+          components={{ Toolbar: GridToolbar }}\n+          columns={columns}\n+          rows={rows} disableColumnSelector={true} disableColumnFilter={true} disableDensitySelector={true} checkboxSelection={true} componentsProps={{\n+            toolbar: {\n+              showQuickFilter: true,\n+              quickFilterProps: { debounceMs: 500 },\n+            }\n+          }}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696004442572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,14 @@\n       <div style={{ height: 500, width: \"100%\" }}>\n         <DataGrid\n           components={{ Toolbar: GridToolbar }}\n           columns={columns}\n-          rows={rows} disableColumnSelector={true} disableColumnFilter={true} disableDensitySelector={true} checkboxSelection={true} componentsProps={{\n+          rows={rows}\n+          disableColumnSelector={true}\n+          disableColumnFilter={true}\n+          disableDensitySelector={true}\n+          checkboxSelection={true}\n+          componentsProps={{\n             toolbar: {\n               showQuickFilter: true,\n               quickFilterProps: { debounceMs: 500 },\n             }\n"
                },
                {
                    "date": 1696004641063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n \n       <div style={{ height: 500, width: \"100%\" }}>\n         <DataGrid\n           components={{ Toolbar: GridToolbar }}\n+          disableRowSelectionOnClick={true}\n           columns={columns}\n           rows={rows}\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n"
                },
                {
                    "date": 1696011968761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { selectCategories } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n+import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n   const categories = useAppSelector(selectCategories)\n \n@@ -16,9 +17,9 @@\n     createdAt: new Date(category.created_at).toLocaleDateString('pt-BR')\n   }))\n \n   const columns: GridColDef[] = [\n-    { field: 'name', headerName: \"Name\", flex: 1 },\n+    { field: 'name', headerName: \"Name\", flex: 1, renderCell: renderNameCell },\n     {\n       field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n     },\n     { field: 'description', headerName: \"Description\", flex: 1 },\n@@ -29,8 +30,16 @@\n       field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell\n     },\n   ]\n \n+  function renderNameCell(rowData: GridRenderCellParams) {\n+    return (\n+      <Link style={{ textDecoration: \"none\" }} to={`/categories/edit/${rowData.value}`}>\n+        <Typography color=\"primary\">{rowData.value}</Typography>\n+      </Link>\n+    )\n+  }\n+\n   function renderActionCell(params: GridRenderCellParams) {\n     return (\n       <IconButton color=\"secondary\" onClick={() => console.log(\"isActiveCell\")}>\n         <DeleteIcon />\n"
                },
                {
                    "date": 1696029550254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,15 @@\n     isActive: category.is_active,\n     createdAt: new Date(category.created_at).toLocaleDateString('pt-BR')\n   }))\n \n+  const componentsProps = {\n+    toolbar: {\n+      showQuickFilter: true,\n+      quickFilterProps: { debounceMs: 500 },\n+    }\n+  }\n+\n   const columns: GridColDef[] = [\n     { field: 'name', headerName: \"Name\", flex: 1, renderCell: renderNameCell },\n     {\n       field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n@@ -74,14 +81,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          componentsProps={{\n-            toolbar: {\n-              showQuickFilter: true,\n-              quickFilterProps: { debounceMs: 500 },\n-            }\n-          }}\n+          componentsProps={ }\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696029560781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          componentsProps={ }\n+          componentsProps={componentsProps}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696029619088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,17 +73,18 @@\n \n \n       <div style={{ height: 500, width: \"100%\" }}>\n         <DataGrid\n+          componentsProps={componentsProps}\n           components={{ Toolbar: GridToolbar }}\n           disableRowSelectionOnClick={true}\n           columns={columns}\n           rows={rows}\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          componentsProps={componentsProps}\n+\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696029655937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-\n+          rowsPerPageOptions={[2, 20, 50, 100]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696029737123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          rowsPerPageOptions={[2, 20, 50, 100]}\n+          pageSizeOptions={[5, 10, 25]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696029819089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          pageSizeOptions={[5, 10, 25]}\n+          pageSizeOptions={[1, 10, 25]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696030151804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          pageSizeOptions={[1, 10, 25]}\n+          pageSizeOptions={[5]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696030248325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          pageSizeOptions={[5]}\n+          pageSizeOptions={[1, 2, 3]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696030384357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,10 +81,10 @@\n           rows={rows}\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n-          checkboxSelection={true}\n-          pageSizeOptions={[1, 2, 3]}\n+          checkboxSelection={true},\n+        rowsPerPage={[10, 20, 30]},\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696030392377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,10 +81,10 @@\n           rows={rows}\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n-          checkboxSelection={true},\n-        rowsPerPage={[10, 20, 30]},\n+          checkboxSelection={true}\n+          rowsPerPage={[10, 20, 30]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696030534289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          rowsPerPage={[10, 20, 30]}\n+          rowsPerPageOptions={[10, 20, 30]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696030616679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           disableColumnSelector={true}\n           disableColumnFilter={true}\n           disableDensitySelector={true}\n           checkboxSelection={true}\n-          rowsPerPageOptions={[10, 20, 30]}\n+          pageSizeOptions={[5, 10]}\n         />\n       </div>\n \n \n"
                },
                {
                    "date": 1696030646411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,13 +66,9 @@\n     <Box maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n       <Box display=\"flex\" justifyContent=\"flex-end\">\n         <Button>New category</Button>\n       </Box>\n-      <Typography variant='h3' component='h1'>\n-        Category page list\n-      </Typography>\n \n-\n       <div style={{ height: 500, width: \"100%\" }}>\n         <DataGrid\n           componentsProps={componentsProps}\n           components={{ Toolbar: GridToolbar }}\n"
                },
                {
                    "date": 1696031018060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n       <Box display=\"flex\" justifyContent=\"flex-end\">\n         <Button>New category</Button>\n       </Box>\n \n-      <div style={{ height: 500, width: \"100%\" }}>\n+      <Box style={{ display: \"flex\", height: 600 }}>\n         <DataGrid\n           componentsProps={componentsProps}\n           components={{ Toolbar: GridToolbar }}\n           disableRowSelectionOnClick={true}\n@@ -80,9 +80,9 @@\n           disableDensitySelector={true}\n           checkboxSelection={true}\n           pageSizeOptions={[5, 10]}\n         />\n-      </div>\n+      </Box>\n \n \n     </Box>\n   )\n"
                },
                {
                    "date": 1696031110391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,12 @@\n \n   return (\n     <Box maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n       <Box display=\"flex\" justifyContent=\"flex-end\">\n-        <Button>New category</Button>\n+        <Button\n+          variant=\"contained\"\n+          color=\"secondary\"\n+        >New category</Button>\n       </Box>\n \n       <Box style={{ display: \"flex\", height: 600 }}>\n         <DataGrid\n"
                },
                {
                    "date": 1696031169701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,11 @@\n       <Box display=\"flex\" justifyContent=\"flex-end\">\n         <Button\n           variant=\"contained\"\n           color=\"secondary\"\n+          component={Link}\n+          to=\"/categories/create\"\n+          style={{ marginBottom: \"1rem\" }}\n         >New category</Button>\n       </Box>\n \n       <Box style={{ display: \"flex\", height: 600 }}>\n"
                },
                {
                    "date": 1696039226493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   ]\n \n   function renderNameCell(rowData: GridRenderCellParams) {\n     return (\n-      <Link style={{ textDecoration: \"none\" }} to={`/categories/edit/${rowData.value}`}>\n+      <Link style={{ textDecoration: \"none\" }} to={`/categories/edit/${rowData.id}`}>\n         <Typography color=\"primary\">{rowData.value}</Typography>\n       </Link>\n     )\n   }\n"
                },
                {
                    "date": 1696183328738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,15 @@\n import React from 'react'\n-import { useAppSelector } from '../../app/hooks'\n-import { selectCategories } from './categorySlice'\n+import { useAppDispatch, useAppSelector } from '../../app/hooks'\n+import { deleteCategory, selectCategories } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n   const categories = useAppSelector(selectCategories)\n+  const dispatch = useAppDispatch()\n \n   const rows: GridRowsProp = categories.map((category) => ({\n     id: category.id,\n     name: category.name,\n@@ -33,12 +34,16 @@\n     {\n       field: 'createdAt', headerName: \"Created At\", flex: 1\n     },\n     {\n-      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell\n+      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell, type: 'string'\n     },\n   ]\n \n+  function handleDeleteCategory(id: string) {\n+    dispatch(deleteCategory(id))\n+  }\n+\n   function renderNameCell(rowData: GridRenderCellParams) {\n     return (\n       <Link style={{ textDecoration: \"none\" }} to={`/categories/edit/${rowData.id}`}>\n         <Typography color=\"primary\">{rowData.value}</Typography>\n@@ -46,10 +51,11 @@\n     )\n   }\n \n   function renderActionCell(params: GridRenderCellParams) {\n+    const { id } = params\n     return (\n-      <IconButton color=\"secondary\" onClick={() => console.log(\"isActiveCell\")}>\n+      <IconButton color=\"secondary\" onClick={() => handleDeleteCategory(id)}>\n         <DeleteIcon />\n       </IconButton>\n     )\n   }\n"
                },
                {
                    "date": 1696183340977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     {\n       field: 'createdAt', headerName: \"Created At\", flex: 1\n     },\n     {\n-      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell, type: 'string'\n+      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell, type: \"string\"\n     },\n   ]\n \n   function handleDeleteCategory(id: string) {\n"
                },
                {
                    "date": 1696183379443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \n   function renderActionCell(params: GridRenderCellParams) {\n     const { id } = params\n     return (\n-      <IconButton color=\"secondary\" onClick={() => handleDeleteCategory(id)}>\n+      <IconButton color=\"secondary\" onClick={() => handleDeleteCategory(params.value)}>\n         <DeleteIcon />\n       </IconButton>\n     )\n   }\n"
                },
                {
                    "date": 1696183402654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,8 @@\n     )\n   }\n \n   function renderActionCell(params: GridRenderCellParams) {\n-    const { id } = params\n     return (\n       <IconButton color=\"secondary\" onClick={() => handleDeleteCategory(params.value)}>\n         <DeleteIcon />\n       </IconButton>\n"
                },
                {
                    "date": 1698846788842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n   ]\n \n   function handleDeleteCategory(id: string) {\n     dispatch(deleteCategory(id))\n+    enqueueSnackbar(\"Category deleted successfully!\", { variant: \"success\" })\n   }\n \n   function renderNameCell(rowData: GridRenderCellParams) {\n     return (\n"
                },
                {
                    "date": 1698846813669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { deleteCategory, selectCategories } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n+import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n   const categories = useAppSelector(selectCategories)\n"
                },
                {
                    "date": 1698846902591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   ]\n \n   function handleDeleteCategory(id: string) {\n     dispatch(deleteCategory(id))\n-    enqueueSnackbar(\"Category deleted successfully!\", { variant: \"success\" })\n+    enqueueSnackbar(\"Category deleted successfully!\", { variant: \"warning\" })\n   }\n \n   function renderNameCell(rowData: GridRenderCellParams) {\n     return (\n"
                },
                {
                    "date": 1698847049918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import React from 'react'\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n import { deleteCategory, selectCategories } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n"
                },
                {
                    "date": 1698938778441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n-import { deleteCategory, selectCategories } from './categorySlice'\n+import { deleteCategory, selectCategories, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n+  const { data, isFetching, error } = useGetCategoriesQuery()\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n   const rows: GridRowsProp = categories.map((category) => ({\n"
                },
                {
                    "date": 1699039100747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n-  const { data, isFetching, error } = useGetCategoriesQuery()\n+  // const { data, isFetching, error } = useGetCategoriesQuery()\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n   const rows: GridRowsProp = categories.map((category) => ({\n"
                },
                {
                    "date": 1699039154544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n-  // const { data, isFetching, error } = useGetCategoriesQuery()\n+  const { data, isFetching, error } = useGetCategoriesQuery()\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n   const rows: GridRowsProp = categories.map((category) => ({\n"
                },
                {
                    "date": 1699045617418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n   const { data, isFetching, error } = useGetCategoriesQuery()\n+  console.log('data', data)\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n   const rows: GridRowsProp = categories.map((category) => ({\n"
                },
                {
                    "date": 1699045678508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   console.log('data', data)\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n-  const rows: GridRowsProp = categories.map((category) => ({\n+  const rows: GridRowsProp = data.data.map((category) => ({\n     id: category.id,\n     name: category.name,\n     description: category.description,\n     isActive: category.is_active,\n"
                },
                {
                    "date": 1699045714432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   console.log('data', data)\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n-  const rows: GridRowsProp = data.data.map((category) => ({\n+  const rows: GridRowsProp = data ? data.data.map((category) => ({\n     id: category.id,\n     name: category.name,\n     description: category.description,\n     isActive: category.is_active,\n"
                },
                {
                    "date": 1699045724544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     name: category.name,\n     description: category.description,\n     isActive: category.is_active,\n     createdAt: new Date(category.created_at).toLocaleDateString('pt-BR')\n-  }))\n+  })) : []\n \n   const componentsProps = {\n     toolbar: {\n       showQuickFilter: true,\n"
                },
                {
                    "date": 1699048327864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n   const { data, isFetching, error } = useGetCategoriesQuery()\n-  console.log('data', data)\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n   const rows: GridRowsProp = data ? data.data.map((category) => ({\n"
                },
                {
                    "date": 1699048397080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,15 @@\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n-import { deleteCategory, selectCategories, useGetCategoriesQuery } from './categorySlice'\n+import { deleteCategory, selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n \n export const ListCategory = () => {\n   const { data, isFetching, error } = useGetCategoriesQuery()\n+  const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n   const rows: GridRowsProp = data ? data.data.map((category) => ({\n"
                },
                {
                    "date": 1699048500362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,10 +40,10 @@\n       field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell, type: \"string\"\n     },\n   ]\n \n-  function handleDeleteCategory(id: string) {\n-    dispatch(deleteCategory(id))\n+  async function handleDeleteCategory(id: string) {\n+    deleteCategory({ variables: id })\n     enqueueSnackbar(\"Category deleted successfully!\", { variant: \"warning\" })\n   }\n \n   function renderNameCell(rowData: GridRenderCellParams) {\n"
                },
                {
                    "date": 1699048517297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n     },\n   ]\n \n   async function handleDeleteCategory(id: string) {\n-    deleteCategory({ variables: id })\n+    deleteCategory({ variables: { id } })\n     enqueueSnackbar(\"Category deleted successfully!\", { variant: \"warning\" })\n   }\n \n   function renderNameCell(rowData: GridRenderCellParams) {\n"
                },
                {
                    "date": 1699048754287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n     },\n   ]\n \n   async function handleDeleteCategory(id: string) {\n-    deleteCategory({ variables: { id } })\n+    deleteCategory({ id })\n     enqueueSnackbar(\"Category deleted successfully!\", { variant: \"warning\" })\n   }\n \n   function renderNameCell(rowData: GridRenderCellParams) {\n"
                },
                {
                    "date": 1699048770339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n     },\n   ]\n \n   async function handleDeleteCategory(id: string) {\n-    deleteCategory({ id })\n+    await deleteCategory({ id })\n     enqueueSnackbar(\"Category deleted successfully!\", { variant: \"warning\" })\n   }\n \n   function renderNameCell(rowData: GridRenderCellParams) {\n"
                },
                {
                    "date": 1699048820350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n-import { deleteCategory, selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n+import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n import { enqueueSnackbar } from 'notistack'\n"
                },
                {
                    "date": 1699049106485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n+import { useEffect } from 'react'\n \n export const ListCategory = () => {\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n@@ -42,11 +43,21 @@\n   ]\n \n   async function handleDeleteCategory(id: string) {\n     await deleteCategory({ id })\n-    enqueueSnackbar(\"Category deleted successfully!\", { variant: \"warning\" })\n   }\n \n+  useEffect(() => {\n+    if (deleteCategoryStatus.isSuccess) {\n+      enqueueSnackbar(\"Category deleted\", { variant: \"success\" })\n+    }\n+    if (deleteCategoryStatus.error) {\n+      enqueueSnackbar(\"Category not deleted\", { variant: \"error\" })\n+    }\n+  })\n+\n+\n+\n   function renderNameCell(rowData: GridRenderCellParams) {\n     return (\n       <Link style={{ textDecoration: \"none\" }} to={`/categories/edit/${rowData.id}`}>\n         <Typography color=\"primary\">{rowData.value}</Typography>\n"
                },
                {
                    "date": 1699050226134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n \n export const ListCategory = () => {\n-  const { data, isFetching, error } = useGetCategoriesQuery()\n+  const { data } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n"
                },
                {
                    "date": 1699055203553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,22 +27,10 @@\n       quickFilterProps: { debounceMs: 500 },\n     }\n   }\n \n-  const columns: GridColDef[] = [\n-    { field: 'name', headerName: \"Name\", flex: 1, renderCell: renderNameCell },\n-    {\n-      field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n-    },\n-    { field: 'description', headerName: \"Description\", flex: 1 },\n-    {\n-      field: 'createdAt', headerName: \"Created At\", flex: 1\n-    },\n-    {\n-      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell, type: \"string\"\n-    },\n-  ]\n \n+\n   async function handleDeleteCategory(id: string) {\n     await deleteCategory({ id })\n   }\n \n@@ -56,32 +44,10 @@\n   })\n \n \n \n-  function renderNameCell(rowData: GridRenderCellParams) {\n-    return (\n-      <Link style={{ textDecoration: \"none\" }} to={`/categories/edit/${rowData.id}`}>\n-        <Typography color=\"primary\">{rowData.value}</Typography>\n-      </Link>\n-    )\n-  }\n \n-  function renderActionCell(params: GridRenderCellParams) {\n-    return (\n-      <IconButton color=\"secondary\" onClick={() => handleDeleteCategory(params.value)}>\n-        <DeleteIcon />\n-      </IconButton>\n-    )\n-  }\n \n-  function renderIsActiveCell(rowData: GridRenderCellParams) {\n-    return (\n-      <Typography color={rowData.value ? \"primary\" : \"secondary\"}>\n-        {rowData.value ? \"Active\" : \"Inactive\"}\n-      </Typography>\n-    )\n-  }\n-\n   return (\n     <Box maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n       <Box display=\"flex\" justifyContent=\"flex-end\">\n         <Button\n"
                },
                {
                    "date": 1699056334461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button, IconButton, Typography } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n-import { DataGrid, GridColDef, GridRenderCellParams, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n+import { DataGrid, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n \n"
                },
                {
                    "date": 1699056341093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n-import { Box, Button, IconButton, Typography } from '@mui/material'\n+import { Box, Button } from '@mui/material'\n import DeleteIcon from '@mui/icons-material/Delete'\n import { DataGrid, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n"
                },
                {
                    "date": 1699056352150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button } from '@mui/material'\n-import DeleteIcon from '@mui/icons-material/Delete'\n-import { DataGrid, GridRowsProp, GridToolbar } from '@mui/x-data-grid'\n+import { DataGrid } from '@mui/x-data-grid'\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n \n"
                },
                {
                    "date": 1699057251660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,21 @@\n import { useAppDispatch, useAppSelector } from '../../app/hooks'\n import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button } from '@mui/material'\n-import { DataGrid } from '@mui/x-data-grid'\n+\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n+import { DataGrid } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const { data } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n-  const rows: GridRowsProp = data ? data.data.map((category) => ({\n-    id: category.id,\n-    name: category.name,\n-    description: category.description,\n-    isActive: category.is_active,\n-    createdAt: new Date(category.created_at).toLocaleDateString('pt-BR')\n-  })) : []\n \n+\n   const componentsProps = {\n     toolbar: {\n       showQuickFilter: true,\n       quickFilterProps: { debounceMs: 500 },\n"
                },
                {
                    "date": 1699057695438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n-import { DataGrid } from '@mui/x-data-grid'\n+import { DataGrid, GridToolbar } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const { data } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n@@ -21,14 +21,8 @@\n       quickFilterProps: { debounceMs: 500 },\n     }\n   }\n \n-\n-\n-  async function handleDeleteCategory(id: string) {\n-    await deleteCategory({ id })\n-  }\n-\n   useEffect(() => {\n     if (deleteCategoryStatus.isSuccess) {\n       enqueueSnackbar(\"Category deleted\", { variant: \"success\" })\n     }\n"
                },
                {
                    "date": 1699063769281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,22 +46,18 @@\n           style={{ marginBottom: \"1rem\" }}\n         >New category</Button>\n       </Box>\n \n-      <Box style={{ display: \"flex\", height: 600 }}>\n-        <DataGrid\n-          componentsProps={componentsProps}\n-          components={{ Toolbar: GridToolbar }}\n-          disableRowSelectionOnClick={true}\n-          columns={columns}\n-          rows={rows}\n-          disableColumnSelector={true}\n-          disableColumnFilter={true}\n-          disableDensitySelector={true}\n-          checkboxSelection={true}\n-          pageSizeOptions={[5, 10]}\n-        />\n-      </Box>\n+      <CategoriesTable\n+        data={data}\n+        isFetching={isFetching}\n+        perPage={options.perPage}\n+        rowsPerPage={options.rowsPerPage}\n+        handleDelete={handleDeleteCategory}\n+        handleOnPageChange={handleOnPageChange}\n+        handleOnPageSizeChange={handleOnPageSizeChange}\n+        handleFilterChange={handleFilterChange}\n+      />\n \n \n     </Box>\n   )\n"
                },
                {
                    "date": 1699063782463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n import { DataGrid, GridToolbar } from '@mui/x-data-grid'\n+import { CategoriesTable } from './components/CategoryTable'\n \n export const ListCategory = () => {\n   const { data } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n"
                },
                {
                    "date": 1699122987820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,17 +13,8 @@\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n   const dispatch = useAppDispatch()\n \n-\n-\n-  const componentsProps = {\n-    toolbar: {\n-      showQuickFilter: true,\n-      quickFilterProps: { debounceMs: 500 },\n-    }\n-  }\n-\n   useEffect(() => {\n     if (deleteCategoryStatus.isSuccess) {\n       enqueueSnackbar(\"Category deleted\", { variant: \"success\" })\n     }\n@@ -31,12 +22,8 @@\n       enqueueSnackbar(\"Category not deleted\", { variant: \"error\" })\n     }\n   })\n \n-\n-\n-\n-\n   return (\n     <Box maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n       <Box display=\"flex\" justifyContent=\"flex-end\">\n         <Button\n@@ -50,9 +37,9 @@\n \n       <CategoriesTable\n         data={data}\n         isFetching={isFetching}\n-        perPage={options.perPage}\n+        perPage={10}\n         rowsPerPage={options.rowsPerPage}\n         handleDelete={handleDeleteCategory}\n         handleOnPageChange={handleOnPageChange}\n         handleOnPageSizeChange={handleOnPageSizeChange}\n"
                },
                {
                    "date": 1699122999366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n \n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n-import { DataGrid, GridToolbar } from '@mui/x-data-grid'\n import { CategoriesTable } from './components/CategoryTable'\n \n export const ListCategory = () => {\n   const { data } = useGetCategoriesQuery()\n"
                },
                {
                    "date": 1699123029207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { useAppDispatch, useAppSelector } from '../../app/hooks'\n+import { useAppSelector } from '../../app/hooks'\n import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button } from '@mui/material'\n \n import { enqueueSnackbar } from 'notistack'\n@@ -10,9 +10,8 @@\n export const ListCategory = () => {\n   const { data } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n-  const dispatch = useAppDispatch()\n \n   useEffect(() => {\n     if (deleteCategoryStatus.isSuccess) {\n       enqueueSnackbar(\"Category deleted\", { variant: \"success\" })\n"
                },
                {
                    "date": 1699123358910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,38 @@\n import { useEffect } from 'react'\n import { CategoriesTable } from './components/CategoryTable'\n \n export const ListCategory = () => {\n-  const { data } = useGetCategoriesQuery()\n+  const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n \n+\n+  const componentsProps = {\n+    toolbar: {\n+      showQuickFilter: true,\n+      quickFilterProps: { debounceMs: 500 },\n+    }\n+  }\n+\n+  const columns: GridColDef[] = [\n+    { field: 'name', headerName: \"Name\", flex: 1, renderCell: renderNameCell },\n+    {\n+      field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n+    },\n+    { field: 'description', headerName: \"Description\", flex: 1 },\n+    {\n+      field: 'createdAt', headerName: \"Created At\", flex: 1\n+    },\n+    {\n+      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell, type: \"string\"\n+    },\n+  ]\n+\n+  async function handleDeleteCategory(id: string) {\n+    await deleteCategory({ id })\n+  }\n+\n   useEffect(() => {\n     if (deleteCategoryStatus.isSuccess) {\n       enqueueSnackbar(\"Category deleted\", { variant: \"success\" })\n     }\n@@ -36,9 +62,9 @@\n       <CategoriesTable\n         data={data}\n         isFetching={isFetching}\n         perPage={10}\n-        rowsPerPage={options.rowsPerPage}\n+        rowsPerPage={[10, 20, 30]}\n         handleDelete={handleDeleteCategory}\n         handleOnPageChange={handleOnPageChange}\n         handleOnPageSizeChange={handleOnPageSizeChange}\n         handleFilterChange={handleFilterChange}\n"
                },
                {
                    "date": 1699123373239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,30 +11,8 @@\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n \n-\n-  const componentsProps = {\n-    toolbar: {\n-      showQuickFilter: true,\n-      quickFilterProps: { debounceMs: 500 },\n-    }\n-  }\n-\n-  const columns: GridColDef[] = [\n-    { field: 'name', headerName: \"Name\", flex: 1, renderCell: renderNameCell },\n-    {\n-      field: 'isActive', headerName: \"Active\", flex: 1, type: \"boolean\", renderCell: renderIsActiveCell\n-    },\n-    { field: 'description', headerName: \"Description\", flex: 1 },\n-    {\n-      field: 'createdAt', headerName: \"Created At\", flex: 1\n-    },\n-    {\n-      field: 'id', headerName: \"Actions\", flex: 1, renderCell: renderActionCell, type: \"string\"\n-    },\n-  ]\n-\n   async function handleDeleteCategory(id: string) {\n     await deleteCategory({ id })\n   }\n \n"
                },
                {
                    "date": 1699196483673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,12 @@\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n \n+  function handleOnPageChange(page: number) {\n+    console.log(oage)\n+  }\n+\n   async function handleDeleteCategory(id: string) {\n     await deleteCategory({ id })\n   }\n \n"
                },
                {
                    "date": 1699196542260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,15 @@\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n \n   function handleOnPageChange(page: number) {\n-    console.log(oage)\n+    console.log(page)\n   }\n \n+  function handleOnPageChange(page: number) {\n+    console.log(page)\n+  }\n+\n   async function handleDeleteCategory(id: string) {\n     await deleteCategory({ id })\n   }\n \n"
                },
                {
                    "date": 1699196551181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   function handleOnPageChange(page: number) {\n     console.log(page)\n   }\n \n-  function handleOnPageChange(page: number) {\n+  function handleOnPageSizeChange(page: number) {\n     console.log(page)\n   }\n \n   async function handleDeleteCategory(id: string) {\n"
                },
                {
                    "date": 1699196563513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n   function handleOnPageChange(page: number) {\n     console.log(page)\n   }\n \n-  function handleOnPageSizeChange(page: number) {\n-    console.log(page)\n+  function handleOnPageSizeChange(perPage: number) {\n+    console.log(perPage)\n   }\n \n   async function handleDeleteCategory(id: string) {\n     await deleteCategory({ id })\n"
                },
                {
                    "date": 1699196616092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,11 @@\n \n   function handleOnPageSizeChange(perPage: number) {\n     console.log(perPage)\n   }\n+  function handleFilterChange(filterModel: GridFilterModel) {\n+    console.log(filterModel)\n+  }\n \n   async function handleDeleteCategory(id: string) {\n     await deleteCategory({ id })\n   }\n"
                },
                {
                    "date": 1699197238078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect } from 'react'\n import { CategoriesTable } from './components/CategoryTable'\n+import { GridFilterModel } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n"
                },
                {
                    "date": 1699197455675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import { CategoriesTable } from './components/CategoryTable'\n import { GridFilterModel } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n+  const [rowsPerPage] = useState([10, 25, 50, 100])\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n \n"
                },
                {
                    "date": 1699197485351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Box, Button } from '@mui/material'\n \n import { enqueueSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n-import { useEffect } from 'react'\n+import { useEffect, useState } from 'react'\n import { CategoriesTable } from './components/CategoryTable'\n import { GridFilterModel } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n@@ -53,9 +53,9 @@\n       <CategoriesTable\n         data={data}\n         isFetching={isFetching}\n         perPage={10}\n-        rowsPerPage={[10, 20, 30]}\n+        rowsPerPage={rowsPerPage}\n         handleDelete={handleDeleteCategory}\n         handleOnPageChange={handleOnPageChange}\n         handleOnPageSizeChange={handleOnPageSizeChange}\n         handleFilterChange={handleFilterChange}\n"
                },
                {
                    "date": 1699197521815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import { GridFilterModel } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const [rowsPerPage] = useState([10, 25, 50, 100])\n+  const [perPage] = useState(10)\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n \n"
                },
                {
                    "date": 1699197723878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import { GridFilterModel } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n   const [rowsPerPage] = useState([10, 25, 50, 100])\n+  const [search, setSearch] = useState('')\n   const [perPage] = useState(10)\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n   const categories = useAppSelector(selectCategories)\n"
                },
                {
                    "date": 1699198413086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,8 @@\n   const [search, setSearch] = useState('')\n   const [perPage] = useState(10)\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n-  const categories = useAppSelector(selectCategories)\n \n   function handleOnPageChange(page: number) {\n     console.log(page)\n   }\n"
                },
                {
                    "date": 1699198457037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,13 +8,14 @@\n import { CategoriesTable } from './components/CategoryTable'\n import { GridFilterModel } from '@mui/x-data-grid'\n \n export const ListCategory = () => {\n+  const [perPage] = useState(10)\n+  const [search, setSearch] = useState('')\n   const [rowsPerPage] = useState([10, 25, 50, 100])\n-  const [search, setSearch] = useState('')\n-  const [perPage] = useState(10)\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n+  const { enqueueSnackbar } = useEnqueueSnackbar\n \n   function handleOnPageChange(page: number) {\n     console.log(page)\n   }\n"
                },
                {
                    "date": 1699198491507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useAppSelector } from '../../app/hooks'\n import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button } from '@mui/material'\n \n-import { enqueueSnackbar } from 'notistack'\n+import { useSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n import { useEffect, useState } from 'react'\n import { CategoriesTable } from './components/CategoryTable'\n import { GridFilterModel } from '@mui/x-data-grid'\n@@ -13,9 +13,9 @@\n   const [search, setSearch] = useState('')\n   const [rowsPerPage] = useState([10, 25, 50, 100])\n   const { data, isFetching, error } = useGetCategoriesQuery()\n   const [deleteCategory, deleteCategoryStatus] = useDeleteCategoryMutation()\n-  const { enqueueSnackbar } = useEnqueueSnackbar\n+  const { enqueueSnackbar } = useSnackbar()\n \n   function handleOnPageChange(page: number) {\n     console.log(page)\n   }\n"
                },
                {
                    "date": 1699199165432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n-import { useAppSelector } from '../../app/hooks'\n-import { selectCategories, useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n+import { useDeleteCategoryMutation, useGetCategoriesQuery } from './categorySlice'\n import { Box, Button } from '@mui/material'\n \n import { useSnackbar } from 'notistack'\n import { Link } from 'react-router-dom'\n"
                }
            ],
            "date": 1695855743800,
            "name": "Commit-0",
            "content": "import React from 'react'\n\nexport const ListCategory = () => {\n  return (\n    <div>ListCategory</div>\n  )\n}\n"
        }
    ]
}